{"version":3,"sources":["../src/battle-tooltips.ts"],"names":["ModifiableValue","battle","pokemon","serverPokemon","value","maxValue","isAccuracy","comment","itemName","Dex","getItem","item","name","ability","baseAbility","abilityName","getAbility","weatherName","getMove","weather","exists","reset","tryItem","hasPseudoWeather","push","volatiles","ignoreKlutz","tryAbility","includes","tryWeather","sides","side","active","itemModify","factor","modify","abilityModify","weatherModify","round","set","reason","setRange","Number","toFixed","toString","valueString","join","BattleTooltips","clickTooltipEvent","e","isLocked","preventDefault","stopImmediatePropagation","holdLockTooltipEvent","hideTooltip","target","currentTarget","showTooltip","type","tagName","longTapTimeout","setTimeout","lockTooltip","LONG_TAP_DELAY","showTooltipEvent","elem","cancelLongTap","parentNode","removeChild","parentElem","$","removeClass","clearTimeout","isPressed","addClass","handleTouchEnd","listen","$elem","on","unshowTooltip","click","args","dataset","tooltip","split","ownHeight","ownheight","buf","move","dex","index","parseInt","nearSide","myPokemon","gmaxMove","undefined","showMoveTooltip","sideIndex","species","getBaseSpecies","baseSpecies","otherPokemon","showPokemonTooltip","sidesSwitched","activeIndex","mySide","length","showFieldTooltip","Promise","resolve","Error","stack","placeTooltip","innerHTML","hoveredElem","notRelativeToParent","scene","$turn","hoveredX1","offset","left","parent","hoveredY1","top","hoveredY2","outerHeight","x","Math","max","y","$wrapper","document","body","append","selection","window","getSelection","err","css","html","appendTo","find","height","documentElement","clientHeight","width","outerWidth","clientWidth","getStatusZMoveEffect","zMove","effect","zMoveEffects","boostText","boost","boosts","Object","keys","map","stat","BattleTextParser","getMaxMoveFromType","maxMoveTable","isZOrMax","text","zEffect","foeActive","foe","toID","getMoveType","moveType","category","zMoveFrom","Move","id","moveName","zMoveTable","zMoveType","movePower","basePower","startsWith","maxMove","getTypeIcon","getCategoryIcon","showingMultipleBasePowers","prevBasePower","difference","basePowers","getMoveBasePower","activeTarget","accuracy","getMoveAccuracy","calls","gen","calledMove","hardcoreMode","shortDesc","priority","desc","gameType","flags","defrost","protect","authentic","reflectable","contact","sound","powder","punch","pulse","bite","recoil","hasCrashDamage","bullet","clientPokemon","isActive","illusionIndex","genderBuf","gender","resourcePrefix","toLowerCase","BattleLog","escapeHTML","speciesForme","levelBuf","level","formechange","transform","types","getPokemonTypes","typechange","typeadd","fainted","hp","maxhp","status","toUpperCase","exacthp","Pokemon","getHPText","floor","min","statusData","toxicTurns","sleepTurns","supportsAbilities","tier","abilityText","getPokemonAbilityText","itemText","itemEffect","prevItem","prevItemEffect","renderStats","battlePokemon","findCorrespondingPokemon","moves","moveid","moveTrack","row","getPPUseText","filter","charAt","isZ","isMax","pokemonHasClones","atLeastOne","sideConditions","sideConditionsLeft","weatherbuf","weatherLeft","slice","speciesClause","ally","searchid","calculateModifiedStats","stats","isPowerTrick","statNamesExceptHP","statName","sourceStatName","clientStatName","spc","boostLevel","boostTable","atk","spe","getSpeciesForme","getSpecies","spa","def","spd","outer","pokemonHasType","allyActive","allyAbility","getAllyAbility","evos","test","short","isTransformed","getSpeedRange","modifiedStats","hasModifiedStat","statLabel","BattleText","statShortName","moveTrackRow","showKnown","ppUsed","maxpp","substr","noPPBoosts","pp","Infinity","baseSpe","baseStats","isRandomBattle","minNature","maxNature","maxIv","tr","trunc","maxIvEvOffset","forMaxMove","pokemonTypes","getTypeList","onMemory","onPlate","onDrive","naturalGift","noTypeOverride","allowTypeOverride","isSound","getGen3Category","ohko","multiplier","ratios","ratio","boostCount","values","ppLeft","minSpe","maxSpe","minRatio","maxRatio","fling","isGKLK","targetWeight","getWeightKg","pokemonWeight","secondaries","auraBoosted","auraBroken","isGrounded","getItemBoost","incenseTypes","itemTypes","orbUsers","orbTypes","noGemMoves","getTypes","curType","slot","getPokemonAbilityData","abilityData","possibilities","abilities","hidePossible","baseAbilityName","Poison","Fighting","Dark","Grass","Normal","Rock","Steel","Dragon","Electric","Water","Fire","Ghost","Bug","Psychic","Ice","Flying","Ground","Fairy","BattleStatGuesser","formatid","modid","moveCount","hasMove","mod","ignoreEVLimits","endsWith","supportsEVs","supportsAVs","guess","role","guessRole","comboEVs","guessEVs","evs","plusStat","minusStat","itemid","abilityid","megaEvolves","megaStone","needsFourMoves","moveids","i","len","heal","isFast","physicalBulk","specialBulk","bulk","ultrafast","offenseBias","ensureMinEVs","evTotal","diff","change","evPriority","prioStat","ensureMaxEVs","statChart","primaryStat","getStat","ev","secondaryStat","SRweaknesses","SRresistances","SRweak","indexOf","hpDivisibility","hpShouldBeDivisible","remaining","evOverride","natureOverride","baseStat","iv","ivs","val","BattleNatures","nature","plus","minus","friendshipValue","require","global"],"mappings":"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","sourcesContent":["/**\n * Pokemon Showdown Tooltips\n *\n * A file for generating tooltips for battles. This should be IE7+ and\n * use the DOM directly.\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nclass ModifiableValue {\n\tvalue = 0;\n\tmaxValue = 0;\n\tcomment: string[];\n\tbattle: Battle;\n\tpokemon: Pokemon | null;\n\tserverPokemon: ServerPokemon;\n\titemName: string;\n\tabilityName: string;\n\tweatherName: string;\n\tisAccuracy = false;\n\tconstructor(battle: Battle, pokemon: Pokemon | null, serverPokemon: ServerPokemon) {\n\t\tthis.comment = [];\n\t\tthis.battle = battle;\n\t\tthis.pokemon = pokemon;\n\t\tthis.serverPokemon = serverPokemon;\n\n\t\tthis.itemName = Dex.getItem(serverPokemon.item).name;\n\t\tconst ability = serverPokemon.ability || pokemon?.ability || serverPokemon.baseAbility;\n\t\tthis.abilityName = Dex.getAbility(ability).name;\n\t\tthis.weatherName = Dex.getMove(battle.weather).exists ?\n\t\t\tDex.getMove(battle.weather).name : Dex.getAbility(battle.weather).name;\n\t}\n\treset(value = 0, isAccuracy?: boolean) {\n\t\tthis.value = value;\n\t\tthis.maxValue = 0;\n\t\tthis.isAccuracy = !!isAccuracy;\n\t\tthis.comment = [];\n\t}\n\ttryItem(itemName: string) {\n\t\tif (itemName !== this.itemName) return false;\n\t\tif (this.battle.hasPseudoWeather('Magic Room')) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Magic Room)`);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.pokemon?.volatiles['embargo']) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Embargo)`);\n\t\t\treturn false;\n\t\t}\n\t\tconst ignoreKlutz = [\n\t\t\t\"Macho Brace\", \"Power Anklet\", \"Power Band\", \"Power Belt\", \"Power Bracer\", \"Power Lens\", \"Power Weight\",\n\t\t];\n\t\tif (this.tryAbility('Klutz') && !ignoreKlutz.includes(itemName)) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Klutz)`);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\ttryAbility(abilityName: string) {\n\t\tif (abilityName !== this.abilityName) return false;\n\t\tif (this.pokemon?.volatiles['gastroacid']) {\n\t\t\tthis.comment.push(` (${abilityName} suppressed by Gastro Acid)`);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\ttryWeather(weatherName?: string) {\n\t\tif (!this.weatherName) return false;\n\t\tif (!weatherName) weatherName = this.weatherName;\n\t\telse if (weatherName !== this.weatherName) return false;\n\t\tfor (const side of this.battle.sides) {\n\t\t\tfor (const active of side.active) {\n\t\t\t\tif (active && ['Air Lock', 'Cloud Nine'].includes(active.ability)) {\n\t\t\t\t\tthis.comment.push(` (${weatherName} suppressed by ${active.ability})`);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\titemModify(factor: number, itemName?: string) {\n\t\tif (!itemName) itemName = this.itemName;\n\t\tif (!itemName) return false;\n\t\tif (!this.tryItem(itemName)) return false;\n\t\treturn this.modify(factor, itemName);\n\t}\n\tabilityModify(factor: number, abilityName: string) {\n\t\tif (!this.tryAbility(abilityName)) return false;\n\t\treturn this.modify(factor, abilityName);\n\t}\n\tweatherModify(factor: number, weatherName?: string, name?: string) {\n\t\tif (!weatherName) weatherName = this.weatherName;\n\t\tif (!weatherName) return false;\n\t\tif (!this.tryWeather(weatherName)) return false;\n\t\treturn this.modify(factor, name || weatherName);\n\t}\n\tmodify(factor: number, name?: string) {\n\t\tif (factor === 0) {\n\t\t\tif (name) this.comment.push(` (${name})`);\n\t\t\tthis.value = 0;\n\t\t\tthis.maxValue = 0;\n\t\t\treturn true;\n\t\t}\n\t\tif (name) this.comment.push(` (${this.round(factor)}&times; from ${name})`);\n\t\tthis.value *= factor;\n\t\tif (!(name === 'Technician' && this.maxValue > 60)) this.maxValue *= factor;\n\t\treturn true;\n\t}\n\tset(value: number, reason?: string) {\n\t\tif (reason) this.comment.push(` (${reason})`);\n\t\tthis.value = value;\n\t\tthis.maxValue = 0;\n\t\treturn true;\n\t}\n\tsetRange(value: number, maxValue: number, reason?: string) {\n\t\tif (reason) this.comment.push(` (${reason})`);\n\t\tthis.value = value;\n\t\tthis.maxValue = maxValue;\n\t\treturn true;\n\t}\n\tround(value: number) {\n\t\treturn value ? Number(value.toFixed(2)) : 0;\n\t}\n\ttoString() {\n\t\tlet valueString;\n\t\tif (this.isAccuracy) {\n\t\t\tvalueString = this.value ? `${this.round(this.value)}%` : `can't miss`;\n\t\t} else {\n\t\t\tvalueString = this.value ? `${this.round(this.value)}` : ``;\n\t\t}\n\t\tif (this.maxValue) {\n\t\t\tvalueString += ` to ${this.round(this.maxValue)}` + (this.isAccuracy ? '%' : '');\n\t\t}\n\t\treturn valueString + this.comment.join('');\n\t}\n}\n\nclass BattleTooltips {\n\tbattle: Battle;\n\n\tconstructor(battle: Battle) {\n\t\tthis.battle = battle;\n\t}\n\n\t// tooltips\n\t// Touch delay, pressing finger more than that time will cause the tooltip to open.\n\t// Shorter time will cause the button to click\n\tstatic LONG_TAP_DELAY = 350; // ms\n\tstatic longTapTimeout = 0;\n\tstatic elem: HTMLDivElement | null = null;\n\tstatic parentElem: HTMLElement | null = null;\n\tstatic isLocked = false;\n\tstatic isPressed = false;\n\n\tstatic hideTooltip() {\n\t\tif (!BattleTooltips.elem) return;\n\t\tBattleTooltips.cancelLongTap();\n\t\tBattleTooltips.elem.parentNode!.removeChild(BattleTooltips.elem);\n\t\tBattleTooltips.elem = null;\n\t\tBattleTooltips.parentElem = null;\n\t\tBattleTooltips.isLocked = false;\n\t\t$('#tooltipwrapper').removeClass('tooltip-locked');\n\t}\n\n\tstatic cancelLongTap() {\n\t\tif (BattleTooltips.longTapTimeout) {\n\t\t\tclearTimeout(BattleTooltips.longTapTimeout);\n\t\t\tBattleTooltips.longTapTimeout = 0;\n\t\t}\n\t}\n\n\tlockTooltip() {\n\t\tif (BattleTooltips.elem && !BattleTooltips.isLocked) {\n\t\t\tBattleTooltips.isLocked = true;\n\t\t\tif (BattleTooltips.isPressed) {\n\t\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\n\t\t\t\tBattleTooltips.isPressed = false;\n\t\t\t}\n\t\t\t$('#tooltipwrapper').addClass('tooltip-locked');\n\t\t}\n\t}\n\n\thandleTouchEnd(e: TouchEvent) {\n\t\tBattleTooltips.cancelLongTap();\n\n\t\tif (!BattleTooltips.isLocked) BattleTooltips.hideTooltip();\n\t}\n\n\tlisten(elem: HTMLElement | JQuery<HTMLElement>) {\n\t\tconst $elem = $(elem);\n\t\t$elem.on('mouseover', '.has-tooltip', this.showTooltipEvent);\n\t\t$elem.on('click', '.has-tooltip', this.clickTooltipEvent);\n\t\t$elem.on('focus', '.has-tooltip', this.showTooltipEvent);\n\t\t$elem.on('mouseout', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('mousedown', '.has-tooltip', this.holdLockTooltipEvent);\n\t\t$elem.on('blur', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('mouseup', '.has-tooltip', BattleTooltips.unshowTooltip);\n\n\t\t$elem.on('touchstart', '.has-tooltip', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.holdLockTooltipEvent(e);\n\t\t\tif (e.currentTarget === BattleTooltips.parentElem && BattleTooltips.parentElem!.tagName === 'BUTTON') {\n\t\t\t\t$(BattleTooltips.parentElem!).addClass('pressed');\n\t\t\t\tBattleTooltips.isPressed = true;\n\t\t\t}\n\t\t});\n\t\t$elem.on('touchend', '.has-tooltip', e => {\n\t\t\te.preventDefault();\n\t\t\tif (e.currentTarget === BattleTooltips.parentElem && BattleTooltips.isPressed) {\n\t\t\t\tBattleTooltips.parentElem!.click();\n\t\t\t}\n\t\t\tBattleTooltips.unshowTooltip();\n\t\t});\n\t\t$elem.on('touchleave', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('touchcancel', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t}\n\n\tclickTooltipEvent = (e: Event) => {\n\t\tif (BattleTooltips.isLocked) {\n\t\t\te.preventDefault();\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\t};\n\t/**\n\t * An event that will lock a tooltip if held down\n\t *\n\t * (Namely, a long-tap or long-click)\n\t */\n\tholdLockTooltipEvent = (e: JQuery.TriggeredEvent) => {\n\t\tif (BattleTooltips.isLocked) BattleTooltips.hideTooltip();\n\t\tconst target = e.currentTarget as HTMLElement;\n\t\tthis.showTooltip(target);\n\t\tlet factor = (e.type === 'mousedown' && target.tagName === 'BUTTON' ? 2 : 1);\n\n\t\tBattleTooltips.longTapTimeout = setTimeout(() => {\n\t\t\tBattleTooltips.longTapTimeout = 0;\n\t\t\tthis.lockTooltip();\n\t\t}, BattleTooltips.LONG_TAP_DELAY * factor);\n\t};\n\n\tshowTooltipEvent = (e: Event) => {\n\t\tif (BattleTooltips.isLocked) return;\n\t\tthis.showTooltip(e.currentTarget as HTMLElement);\n\t};\n\n\t/**\n\t * Only hides tooltips if they're not locked\n\t */\n\tstatic unshowTooltip() {\n\t\tif (BattleTooltips.isLocked) return;\n\t\tif (BattleTooltips.isPressed) {\n\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\n\t\t\tBattleTooltips.isPressed = false;\n\t\t}\n\t\tBattleTooltips.hideTooltip();\n\t}\n\n\tshowTooltip(elem: HTMLElement) {\n\t\tconst args = (elem.dataset.tooltip || '').split('|');\n\t\tconst [type] = args;\n\t\t/**\n\t\t * If false, we instead attach the tooltip above the parent element.\n\t\t * This is important for the move/switch menus so the tooltip doesn't\n\t\t * cover up buttons above the hovered button.\n\t\t */\n\t\tlet ownHeight = !!elem.dataset.ownheight;\n\n\t\tlet buf: string;\n\t\tswitch (type) {\n\t\tcase 'move':\n\t\tcase 'zmove':\n\t\tcase 'maxmove': { // move|MOVE|ACTIVEPOKEMON|[GMAXMOVE]\n\t\t\tlet move = this.battle.dex.getMove(args[1]);\n\t\t\tlet index = parseInt(args[2], 10);\n\t\t\tlet pokemon = this.battle.nearSide.active[index];\n\t\t\tlet serverPokemon = this.battle.myPokemon![index];\n\t\t\tlet gmaxMove = args[3] ? this.battle.dex.getMove(args[3]) : undefined;\n\t\t\tif (!pokemon) return false;\n\t\t\tbuf = this.showMoveTooltip(move, type, pokemon, serverPokemon, gmaxMove);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'pokemon': { // pokemon|SIDE|POKEMON\n\t\t\t// mouse over sidebar pokemon\n\t\t\t// pokemon definitely exists, serverPokemon always ignored\n\t\t\tlet sideIndex = parseInt(args[1], 10);\n\t\t\tlet side = this.battle.sides[sideIndex];\n\t\t\tlet pokemon = side.pokemon[parseInt(args[2], 10)];\n\t\t\tif (args[3] === 'illusion') {\n\t\t\t\tbuf = '';\n\t\t\t\tconst species = pokemon.getBaseSpecies().baseSpecies;\n\t\t\t\tlet index = 1;\n\t\t\t\tfor (const otherPokemon of side.pokemon) {\n\t\t\t\t\tif (otherPokemon.getBaseSpecies().baseSpecies === species) {\n\t\t\t\t\t\tbuf += this.showPokemonTooltip(otherPokemon, null, false, index);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbuf = this.showPokemonTooltip(pokemon);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'activepokemon': { // activepokemon|SIDE|ACTIVE\n\t\t\t// mouse over active pokemon\n\t\t\t// pokemon definitely exists, serverPokemon maybe\n\t\t\tlet sideIndex = parseInt(args[1], 10);\n\t\t\tlet side = this.battle.sides[+this.battle.sidesSwitched ^ sideIndex];\n\t\t\tlet activeIndex = parseInt(args[2], 10);\n\t\t\tlet pokemon = side.active[activeIndex];\n\t\t\tlet serverPokemon = null;\n\t\t\tif (sideIndex === 0 && this.battle.myPokemon) {\n\t\t\t\tserverPokemon = this.battle.myPokemon[activeIndex];\n\t\t\t}\n\t\t\tif (!pokemon) return false;\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon, true);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'switchpokemon': { // switchpokemon|POKEMON\n\t\t\t// mouse over switchable pokemon\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\n\t\t\tlet side = this.battle.mySide;\n\t\t\tlet activeIndex = parseInt(args[1], 10);\n\t\t\tlet pokemon = null;\n\t\t\tif (activeIndex < side.active.length) {\n\t\t\t\tpokemon = side.active[activeIndex];\n\t\t\t}\n\t\t\tlet serverPokemon = this.battle.myPokemon![activeIndex];\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'field': {\n\t\t\tbuf = this.showFieldTooltip();\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\t// \"throws\" an error without crashing\n\t\t\tPromise.resolve(new Error(`unrecognized type`));\n\t\t\tbuf = `<p class=\"message-error\" style=\"white-space: pre-wrap\">${new Error(`unrecognized type`).stack}</p>`;\n\t\t}\n\n\t\tthis.placeTooltip(buf, elem, ownHeight, type);\n\t\treturn true;\n\t}\n\n\tplaceTooltip(innerHTML: string, hoveredElem?: HTMLElement, notRelativeToParent?: boolean, type?: string) {\n\t\tlet $elem;\n\t\tif (hoveredElem) {\n\t\t\t$elem = $(hoveredElem);\n\t\t} else {\n\t\t\t$elem = (this.battle.scene as BattleScene).$turn;\n\t\t\tnotRelativeToParent = true;\n\t\t}\n\n\t\tlet hoveredX1 = $elem.offset()!.left;\n\n\t\tif (!notRelativeToParent) {\n\t\t\t$elem = $elem.parent();\n\t\t}\n\n\t\tlet hoveredY1 = $elem.offset()!.top;\n\t\tlet hoveredY2 = hoveredY1 + $elem.outerHeight()!;\n\n\t\t// (x, y) are the left and top offsets of #tooltipwrapper, which mark the\n\t\t// BOTTOM LEFT CORNER of the tooltip\n\n\t\tlet x = Math.max(hoveredX1 - 2, 0);\n\t\tlet y = Math.max(hoveredY1 - 5, 0);\n\n\t\tlet $wrapper = $('#tooltipwrapper');\n\t\tif (!$wrapper.length) {\n\t\t\t$wrapper = $(`<div id=\"tooltipwrapper\" role=\"tooltip\"></div>`);\n\t\t\t$(document.body).append($wrapper);\n\t\t\t$wrapper.on('click', e => {\n\t\t\t\ttry {\n\t\t\t\t\tconst selection = window.getSelection()!;\n\t\t\t\t\tif (selection.type === 'Range') return;\n\t\t\t\t} catch (err) {}\n\t\t\t\tBattleTooltips.hideTooltip();\n\t\t\t});\n\t\t} else {\n\t\t\t$wrapper.removeClass('tooltip-locked');\n\t\t}\n\t\t$wrapper.css({\n\t\t\tleft: x,\n\t\t\ttop: y,\n\t\t});\n\t\tinnerHTML = `<div class=\"tooltipinner\"><div class=\"tooltip tooltip-${type}\">${innerHTML}</div></div>`;\n\t\t$wrapper.html(innerHTML).appendTo(document.body);\n\t\tBattleTooltips.elem = $wrapper.find('.tooltip')[0] as HTMLDivElement;\n\t\tBattleTooltips.isLocked = false;\n\n\t\tlet height = $(BattleTooltips.elem).outerHeight()!;\n\t\tif (y - height < 1) {\n\t\t\t// tooltip is too tall to fit above the element:\n\t\t\t// try to fit it below it instead\n\t\t\ty = hoveredY2 + height + 5;\n\t\t\tif (y > document.documentElement.clientHeight) {\n\t\t\t\t// tooltip is also too tall to fit below the element:\n\t\t\t\t// just place it at the top of the screen\n\t\t\t\ty = height + 1;\n\t\t\t}\n\t\t\t$wrapper.css('top', y);\n\t\t} else if (y < 75) {\n\t\t\t// tooltip is pretty high up, put it below the element if it fits\n\t\t\ty = hoveredY2 + height + 5;\n\t\t\tif (y < document.documentElement.clientHeight) {\n\t\t\t\t// it fits\n\t\t\t\t$wrapper.css('top', y);\n\t\t\t}\n\t\t}\n\n\t\tlet width = $(BattleTooltips.elem).outerWidth()!;\n\t\tif (x > document.documentElement.clientWidth - width - 2) {\n\t\t\tx = document.documentElement.clientWidth - width - 2;\n\t\t\t$wrapper.css('left', x);\n\t\t}\n\n\t\tBattleTooltips.parentElem = hoveredElem || null;\n\t\treturn true;\n\t}\n\n\thideTooltip() {\n\t\tBattleTooltips.hideTooltip();\n\t}\n\n\tstatic zMoveEffects: {[zEffect: string]: string} = {\n\t\t'clearnegativeboost': \"Restores negative stat stages to 0\",\n\t\t'crit2': \"Crit ratio +2\",\n\t\t'heal': \"Restores HP 100%\",\n\t\t'curse': \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\n\t\t'redirect': \"Redirects opposing attacks to user\",\n\t\t'healreplacement': \"Restores replacement's HP 100%\",\n\t};\n\n\tgetStatusZMoveEffect(move: Move) {\n\t\tif (move.zMove!.effect! in BattleTooltips.zMoveEffects) {\n\t\t\treturn BattleTooltips.zMoveEffects[move.zMove!.effect!];\n\t\t}\n\t\tlet boostText = '';\n\t\tif (move.zMove!.boost) {\n\t\t\tlet boosts = Object.keys(move.zMove!.boost) as StatName[];\n\t\t\tboostText = boosts.map(stat =>\n\t\t\t\tBattleTextParser.stat(stat) + ' +' + move.zMove!.boost![stat]\n\t\t\t).join(', ');\n\t\t}\n\t\treturn boostText;\n\t}\n\n\tstatic zMoveTable: {[type in TypeName]: string} = {\n\t\tPoison: \"Acid Downpour\",\n\t\tFighting: \"All-Out Pummeling\",\n\t\tDark: \"Black Hole Eclipse\",\n\t\tGrass: \"Bloom Doom\",\n\t\tNormal: \"Breakneck Blitz\",\n\t\tRock: \"Continental Crush\",\n\t\tSteel: \"Corkscrew Crash\",\n\t\tDragon: \"Devastating Drake\",\n\t\tElectric: \"Gigavolt Havoc\",\n\t\tWater: \"Hydro Vortex\",\n\t\tFire: \"Inferno Overdrive\",\n\t\tGhost: \"Never-Ending Nightmare\",\n\t\tBug: \"Savage Spin-Out\",\n\t\tPsychic: \"Shattered Psyche\",\n\t\tIce: \"Subzero Slammer\",\n\t\tFlying: \"Supersonic Skystrike\",\n\t\tGround: \"Tectonic Rage\",\n\t\tFairy: \"Twinkle Tackle\",\n\t\t\"???\": \"\",\n\t};\n\n\tstatic maxMoveTable: {[type in TypeName]: string} = {\n\t\tPoison: \"Max Ooze\",\n\t\tFighting: \"Max Knuckle\",\n\t\tDark: \"Max Darkness\",\n\t\tGrass: \"Max Overgrowth\",\n\t\tNormal: \"Max Strike\",\n\t\tRock: \"Max Rockfall\",\n\t\tSteel: \"Max Steelspike\",\n\t\tDragon: \"Max Wyrmwind\",\n\t\tElectric: \"Max Lightning\",\n\t\tWater: \"Max Geyser\",\n\t\tFire: \"Max Flare\",\n\t\tGhost: \"Max Phantasm\",\n\t\tBug: \"Max Flutterby\",\n\t\tPsychic: \"Max Mindstorm\",\n\t\tIce: \"Max Hailstorm\",\n\t\tFlying: \"Max Airstream\",\n\t\tGround: \"Max Quake\",\n\t\tFairy: \"Max Starfall\",\n\t\t\"???\": \"\",\n\t};\n\n\tgetMaxMoveFromType(type: TypeName, gmaxMove?: string | Move) {\n\t\tif (gmaxMove) {\n\t\t\tgmaxMove = Dex.getMove(gmaxMove);\n\t\t\tif (type === gmaxMove.type) return gmaxMove;\n\t\t}\n\t\treturn Dex.getMove(BattleTooltips.maxMoveTable[type]);\n\t}\n\n\tshowMoveTooltip(move: Move, isZOrMax: string, pokemon: Pokemon, serverPokemon: ServerPokemon, gmaxMove?: Move) {\n\t\tlet text = '';\n\n\t\tlet zEffect = '';\n\t\tlet foeActive = pokemon.side.foe.active;\n\t\t// TODO: move this somewhere it makes more sense\n\t\tif (pokemon.ability === '(suppressed)') serverPokemon.ability = '(suppressed)';\n\t\tlet ability = toID(serverPokemon.ability || pokemon.ability || serverPokemon.baseAbility);\n\t\tlet item = this.battle.dex.getItem(serverPokemon.item);\n\n\t\tlet value = new ModifiableValue(this.battle, pokemon, serverPokemon);\n\t\tlet [moveType, category] = this.getMoveType(move, value, gmaxMove || isZOrMax === 'maxmove');\n\n\t\tif (isZOrMax === 'zmove') {\n\t\t\tif (item.zMoveFrom === move.name) {\n\t\t\t\tmove = this.battle.dex.getMove(item.zMove as string);\n\t\t\t} else if (move.category === 'Status') {\n\t\t\t\tmove = new Move(move.id, \"\", {\n\t\t\t\t\t...move,\n\t\t\t\t\tname: 'Z-' + move.name,\n\t\t\t\t});\n\t\t\t\tzEffect = this.getStatusZMoveEffect(move);\n\t\t\t} else {\n\t\t\t\tlet moveName = BattleTooltips.zMoveTable[item.zMoveType as TypeName];\n\t\t\t\tlet zMove = this.battle.dex.getMove(moveName);\n\t\t\t\tlet movePower = move.zMove!.basePower;\n\t\t\t\t// the different Hidden Power types don't have a Z power set, fall back on base move\n\t\t\t\tif (!movePower && move.id.startsWith('hiddenpower')) {\n\t\t\t\t\tmovePower = this.battle.dex.getMove('hiddenpower').zMove!.basePower;\n\t\t\t\t}\n\t\t\t\tif (move.id === 'weatherball') {\n\t\t\t\t\tswitch (this.battle.weather) {\n\t\t\t\t\tcase 'sunnyday':\n\t\t\t\t\tcase 'desolateland':\n\t\t\t\t\t\tzMove = this.battle.dex.getMove(BattleTooltips.zMoveTable['Fire']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'raindance':\n\t\t\t\t\tcase 'primordialsea':\n\t\t\t\t\t\tzMove = this.battle.dex.getMove(BattleTooltips.zMoveTable['Water']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sandstorm':\n\t\t\t\t\t\tzMove = this.battle.dex.getMove(BattleTooltips.zMoveTable['Rock']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hail':\n\t\t\t\t\t\tzMove = this.battle.dex.getMove(BattleTooltips.zMoveTable['Ice']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmove = new Move(zMove.id, zMove.name, {\n\t\t\t\t\t...zMove,\n\t\t\t\t\tcategory: move.category,\n\t\t\t\t\tbasePower: movePower,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (isZOrMax === 'maxmove') {\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tmove = this.battle.dex.getMove('Max Guard');\n\t\t\t} else {\n\t\t\t\tlet maxMove = this.getMaxMoveFromType(moveType, gmaxMove);\n\t\t\t\tconst basePower = ['gmaxdrumsolo', 'gmaxfireball', 'gmaxhydrosnipe'].includes(maxMove.id) ?\n\t\t\t\t\tmaxMove.basePower : move.maxMove.basePower;\n\t\t\t\tmove = new Move(maxMove.id, maxMove.name, {\n\t\t\t\t\t...maxMove,\n\t\t\t\t\tcategory: move.category,\n\t\t\t\t\tbasePower,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\ttext += '<h2>' + move.name + '<br />';\n\n\t\ttext += Dex.getTypeIcon(moveType);\n\t\ttext += ` ${Dex.getCategoryIcon(category)}</h2>`;\n\n\t\t// Check if there are more than one active Pokémon to check for multiple possible BPs.\n\t\tlet showingMultipleBasePowers = false;\n\t\tif (category !== 'Status' && foeActive.length > 1) {\n\t\t\t// We check if there is a difference in base powers to note it.\n\t\t\t// Otherwise, it is just shown as in singles.\n\t\t\t// The trick is that we need to calculate it first for each Pokémon to see if it changes.\n\t\t\tlet prevBasePower: string | null = null;\n\t\t\tlet basePower: string = '';\n\t\t\tlet difference = false;\n\t\t\tlet basePowers = [];\n\t\t\tfor (const active of foeActive) {\n\t\t\t\tif (!active) continue;\n\t\t\t\tvalue = this.getMoveBasePower(move, moveType, value, active);\n\t\t\t\tbasePower = '' + value;\n\t\t\t\tif (prevBasePower === null) prevBasePower = basePower;\n\t\t\t\tif (prevBasePower !== basePower) difference = true;\n\t\t\t\tbasePowers.push('Base power vs ' + active.name + ': ' + basePower);\n\t\t\t}\n\t\t\tif (difference) {\n\t\t\t\ttext += '<p>' + basePowers.join('<br />') + '</p>';\n\t\t\t\tshowingMultipleBasePowers = true;\n\t\t\t}\n\t\t\t// Falls through to not to repeat code on showing the base power.\n\t\t}\n\t\tif (!showingMultipleBasePowers && category !== 'Status') {\n\t\t\tlet activeTarget = foeActive[0] || foeActive[1] || foeActive[2];\n\t\t\tvalue = this.getMoveBasePower(move, moveType, value, activeTarget);\n\t\t\ttext += '<p>Base power: ' + value + '</p>';\n\t\t}\n\n\t\tlet accuracy = this.getMoveAccuracy(move, value);\n\n\t\t// Deal with Nature Power special case, indicating which move it calls.\n\t\tif (move.id === 'naturepower') {\n\t\t\tlet calls;\n\t\t\tif (this.battle.gen > 5) {\n\t\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\t\tcalls = 'Thunderbolt';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\t\tcalls = 'Energy Ball';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\t\t\tcalls = 'Moonblast';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\n\t\t\t\t\tcalls = 'Psychic';\n\t\t\t\t} else {\n\t\t\t\t\tcalls = 'Tri Attack';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gen > 3) {\n\t\t\t\t// In gens 4 and 5 it calls Earthquake.\n\t\t\t\tcalls = 'Earthquake';\n\t\t\t} else {\n\t\t\t\t// In gen 3 it calls Swift, so it retains its normal typing.\n\t\t\t\tcalls = 'Swift';\n\t\t\t}\n\t\t\tlet calledMove = this.battle.dex.getMove(calls);\n\t\t\ttext += 'Calls ' + Dex.getTypeIcon(this.getMoveType(calledMove, value)[0]) + ' ' + calledMove.name;\n\t\t}\n\n\t\ttext += '<p>Accuracy: ' + accuracy + '</p>';\n\t\tif (zEffect) text += '<p>Z-Effect: ' + zEffect + '</p>';\n\n\t\tif (this.battle.gen < 7 || this.battle.hardcoreMode) {\n\t\t\ttext += '<p class=\"section\">' + move.shortDesc + '</p>';\n\t\t} else {\n\t\t\ttext += '<p class=\"section\">';\n\t\t\tif (move.priority > 1) {\n\t\t\t\ttext += 'Nearly always moves first <em>(priority +' + move.priority + ')</em>.</p><p>';\n\t\t\t} else if (move.priority <= -1) {\n\t\t\t\ttext += 'Nearly always moves last <em>(priority &minus;' + (-move.priority) + ')</em>.</p><p>';\n\t\t\t} else if (move.priority === 1) {\n\t\t\t\ttext += 'Usually moves first <em>(priority +' + move.priority + ')</em>.</p><p>';\n\t\t\t} else {\n\t\t\t\tif (move.id === 'grassyglide' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\t\ttext += 'Usually moves first <em>(priority +1)</em>.</p><p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += '' + (move.desc || move.shortDesc) + '</p>';\n\n\t\t\tif (this.battle.gameType === 'doubles') {\n\t\t\t\tif (move.target === 'allAdjacent') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes and ally.</p>';\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes.</p>';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gameType === 'triples') {\n\t\t\t\tif (move.target === 'allAdjacent') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes and allies.</p>';\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes.</p>';\n\t\t\t\t} else if (move.target === 'any') {\n\t\t\t\t\ttext += '<p>&#x25ce; Can target distant Pok&eacute;mon in Triples.</p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (move.flags.defrost) {\n\t\t\t\ttext += `<p class=\"movetag\">The user thaws out if it is frozen.</p>`;\n\t\t\t}\n\t\t\tif (!move.flags.protect && !['self', 'allySide'].includes(move.target)) {\n\t\t\t\ttext += `<p class=\"movetag\">Not blocked by Protect <small>(and Detect, King's Shield, Spiky Shield)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.authentic) {\n\t\t\t\ttext += `<p class=\"movetag\">Bypasses Substitute <small>(but does not break it)</small></p>`;\n\t\t\t}\n\t\t\tif (!move.flags.reflectable && !['self', 'allySide'].includes(move.target) && move.category === 'Status') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Not bounceable <small>(can't be bounced by Magic Coat/Bounce)</small></p>`;\n\t\t\t}\n\n\t\t\tif (move.flags.contact) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Contact <small>(triggers Iron Barbs, Spiky Shield, etc)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.sound) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Sound <small>(doesn't affect Soundproof pokemon)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.powder) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Powder <small>(doesn't affect Grass, Overcoat, Safety Goggles)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.punch && ability === 'ironfist') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Fist <small>(boosted by Iron Fist)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.pulse && ability === 'megalauncher') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Pulse <small>(boosted by Mega Launcher)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bite && ability === 'strongjaw') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bite <small>(boosted by Strong Jaw)</small></p>`;\n\t\t\t}\n\t\t\tif ((move.recoil || move.hasCrashDamage) && ability === 'reckless') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Recoil <small>(boosted by Reckless)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bullet) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bullet-like <small>(doesn't affect Bulletproof pokemon)</small></p>`;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\t/**\n\t * Needs either a Pokemon or a ServerPokemon, but note that neither\n\t * are guaranteed: If you hover over a possible switch-in that's\n\t * never been switched in before, you'll only have a ServerPokemon,\n\t * and if you hover over an opponent's pokemon, you'll only have a\n\t * Pokemon.\n\t *\n\t * isActive is true if hovering over a pokemon in the battlefield,\n\t * and false if hovering over a pokemon in the Switch menu.\n\t *\n\t * @param clientPokemon\n\t * @param serverPokemon\n\t * @param isActive\n\t */\n\tshowPokemonTooltip(\n\t\tclientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, isActive?: boolean, illusionIndex?: number\n\t) {\n\t\tconst pokemon = clientPokemon || serverPokemon!;\n\t\tlet text = '';\n\t\tlet genderBuf = '';\n\t\tconst gender = pokemon.gender;\n\t\tif (gender === 'M' || gender === 'F') {\n\t\t\tgenderBuf = ` <img src=\"${Dex.resourcePrefix}fx/gender-${gender.toLowerCase()}.png\" alt=\"${gender}\" width=\"7\" height=\"10\" class=\"pixelated\" /> `;\n\t\t}\n\n\t\tlet name = BattleLog.escapeHTML(pokemon.name);\n\t\tif (pokemon.speciesForme !== pokemon.name) {\n\t\t\tname += ' <small>(' + BattleLog.escapeHTML(pokemon.speciesForme) + ')</small>';\n\t\t}\n\n\t\tlet levelBuf = (pokemon.level !== 100 ? ` <small>L${pokemon.level}</small>` : ``);\n\t\tif (!illusionIndex || illusionIndex === 1) {\n\t\t\ttext += `<h2>${name}${genderBuf}${illusionIndex ? '' : levelBuf}<br />`;\n\n\t\t\tif (clientPokemon?.volatiles.formechange) {\n\t\t\t\tif (clientPokemon.volatiles.transform) {\n\t\t\t\t\ttext += `<small>(Transformed into ${clientPokemon.volatiles.formechange[1]})</small><br />`;\n\t\t\t\t} else {\n\t\t\t\t\ttext += `<small>(Changed forme: ${clientPokemon.volatiles.formechange[1]})</small><br />`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet types = this.getPokemonTypes(pokemon);\n\n\t\t\tif (clientPokemon && (clientPokemon.volatiles.typechange || clientPokemon.volatiles.typeadd)) {\n\t\t\t\ttext += `<small>(Type changed)</small><br />`;\n\t\t\t}\n\t\t\ttext += types.map(type => Dex.getTypeIcon(type)).join(' ');\n\t\t\ttext += `</h2>`;\n\t\t}\n\n\t\tif (illusionIndex) {\n\t\t\ttext += `<p class=\"section\"><strong>Possible Illusion #${illusionIndex}</strong>${levelBuf}</p>`;\n\t\t}\n\n\t\tif (pokemon.fainted) {\n\t\t\ttext += '<p><small>HP:</small> (fainted)</p>';\n\t\t} else if (this.battle.hardcoreMode) {\n\t\t\tif (serverPokemon) {\n\t\t\t\ttext += '<p><small>HP:</small> ' + serverPokemon.hp + '/' + serverPokemon.maxhp + (pokemon.status ? ' <span class=\"status ' + pokemon.status + '\">' + pokemon.status.toUpperCase() + '</span>' : '') + '</p>';\n\t\t\t}\n\t\t} else {\n\t\t\tlet exacthp = '';\n\t\t\tif (serverPokemon) {\n\t\t\t\texacthp = ' (' + serverPokemon.hp + '/' + serverPokemon.maxhp + ')';\n\t\t\t} else if (pokemon.maxhp === 48) {\n\t\t\t\texacthp = ' <small>(' + pokemon.hp + '/' + pokemon.maxhp + ' pixels)</small>';\n\t\t\t}\n\t\t\ttext += '<p><small>HP:</small> ' + Pokemon.getHPText(pokemon) + exacthp + (pokemon.status ? ' <span class=\"status ' + pokemon.status + '\">' + pokemon.status.toUpperCase() + '</span>' : '');\n\t\t\tif (clientPokemon) {\n\t\t\t\tif (pokemon.status === 'tox') {\n\t\t\t\t\tif (pokemon.ability === 'Poison Heal' || pokemon.ability === 'Magic Guard') {\n\t\t\t\t\t\ttext += ' <small>Would take if ability removed: ' + Math.floor(100 / 16 * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)) + '%</small>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += ' Next damage: ' + Math.floor(100 / (clientPokemon.volatiles['dynamax'] ? 32 : 16) * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)) + '%';\n\t\t\t\t\t}\n\t\t\t\t} else if (pokemon.status === 'slp') {\n\t\t\t\t\ttext += ' Turns asleep: ' + clientPokemon.statusData.sleepTurns;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttext += '</p>';\n\t\t}\n\n\t\tconst supportsAbilities = this.battle.gen > 2 && !this.battle.tier.includes(\"Let's Go\");\n\n\t\tlet abilityText = '';\n\t\tif (supportsAbilities) {\n\t\t\tabilityText = this.getPokemonAbilityText(\n\t\t\t\tclientPokemon, serverPokemon, isActive, !!illusionIndex && illusionIndex > 1\n\t\t\t);\n\t\t}\n\n\t\tlet itemText = '';\n\t\tif (serverPokemon) {\n\t\t\tlet item = '';\n\t\t\tlet itemEffect = '';\n\t\t\tif (clientPokemon?.prevItem) {\n\t\t\t\titem = 'None';\n\t\t\t\tlet prevItem = Dex.getItem(clientPokemon.prevItem).name;\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\n\t\t\t}\n\t\t\tif (serverPokemon.item) item = Dex.getItem(serverPokemon.item).name;\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\n\t\t} else if (clientPokemon) {\n\t\t\tlet item = '';\n\t\t\tlet itemEffect = clientPokemon.itemEffect || '';\n\t\t\tif (clientPokemon.prevItem) {\n\t\t\t\titem = 'None';\n\t\t\t\tif (itemEffect) itemEffect += '; ';\n\t\t\t\tlet prevItem = Dex.getItem(clientPokemon.prevItem).name;\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\n\t\t\t}\n\t\t\tif (pokemon.item) item = Dex.getItem(pokemon.item).name;\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\n\t\t}\n\n\t\ttext += '<p>';\n\t\ttext += abilityText;\n\t\tif (itemText) {\n\t\t\t// ability/item on one line for your own switch tooltips, two lines everywhere else\n\t\t\ttext += (!isActive && serverPokemon ? ' / ' : '</p><p>');\n\t\t\ttext += itemText;\n\t\t}\n\t\ttext += '</p>';\n\n\t\ttext += this.renderStats(clientPokemon, serverPokemon, !isActive);\n\n\t\tif (serverPokemon && !isActive) {\n\t\t\t// move list\n\t\t\ttext += `<p class=\"section\">`;\n\t\t\tconst battlePokemon = clientPokemon || this.battle.findCorrespondingPokemon(pokemon);\n\t\t\tfor (const moveid of serverPokemon.moves) {\n\t\t\t\tconst move = Dex.getMove(moveid);\n\t\t\t\tlet moveName = `&#8226; ${move.name}`;\n\t\t\t\tif (battlePokemon?.moveTrack) {\n\t\t\t\t\tfor (const row of battlePokemon.moveTrack) {\n\t\t\t\t\t\tif (moveName === row[0]) {\n\t\t\t\t\t\t\tmoveName = this.getPPUseText(row, true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttext += `${moveName}<br />`;\n\t\t\t}\n\t\t\ttext += '</p>';\n\t\t} else if (!this.battle.hardcoreMode && clientPokemon?.moveTrack.length) {\n\t\t\t// move list (guessed)\n\t\t\ttext += `<p class=\"section\">`;\n\t\t\tfor (const row of clientPokemon.moveTrack) {\n\t\t\t\ttext += `${this.getPPUseText(row)}<br />`;\n\t\t\t}\n\t\t\tif (clientPokemon.moveTrack.filter(([moveName]) => {\n\t\t\t\tif (moveName.charAt(0) === '*') return false;\n\t\t\t\tconst move = this.battle.dex.getMove(moveName);\n\t\t\t\treturn !move.isZ && !move.isMax;\n\t\t\t}).length > 4) {\n\t\t\t\ttext += `(More than 4 moves is usually a sign of Illusion Zoroark/Zorua.) `;\n\t\t\t}\n\t\t\tif (this.battle.gen === 3) {\n\t\t\t\ttext += `(Pressure is not visible in Gen 3, so in certain situations, more PP may have been lost than shown here.) `;\n\t\t\t}\n\t\t\tif (this.pokemonHasClones(clientPokemon)) {\n\t\t\t\ttext += `(Your opponent has two indistinguishable Pokémon, making it impossible for you to tell which one has which moves/ability/item.) `;\n\t\t\t}\n\t\t\ttext += `</p>`;\n\t\t}\n\t\treturn text;\n\t}\n\n\tshowFieldTooltip() {\n\t\tconst scene = this.battle.scene as BattleScene;\n\t\tlet buf = `<table style=\"border: 0; border-collapse: collapse; vertical-align: top; padding: 0; width: 100%\"><tr>`;\n\n\t\tlet atLeastOne = false;\n\t\tfor (const side of this.battle.sides) {\n\t\t\tconst sideConditions = scene.sideConditionsLeft(side, true);\n\t\t\tif (sideConditions) atLeastOne = true;\n\t\t\tbuf += `<td><p class=\"section\"><strong>${BattleLog.escapeHTML(side.name)}</strong>${sideConditions || \"<br />(no conditions)\"}</p></td>`;\n\t\t}\n\t\tbuf += `</tr><table>`;\n\t\tif (!atLeastOne) buf = ``;\n\n\t\tlet weatherbuf = scene.weatherLeft() || `(no weather)`;\n\t\tif (weatherbuf.startsWith('<br />')) {\n\t\t\tweatherbuf = weatherbuf.slice(6);\n\t\t}\n\t\tbuf = `<p>${weatherbuf}</p>` + buf;\n\t\treturn `<p>${buf}</p>`;\n\t}\n\n\t/**\n\t * Does this Pokémon's trainer have two of these Pokémon that are\n\t * indistinguishable? (Same nickname, species, forme, level, gender,\n\t * and shininess.)\n\t */\n\tpokemonHasClones(pokemon: Pokemon) {\n\t\tconst side = pokemon.side;\n\t\tif (side.battle.speciesClause) return false;\n\t\tfor (const ally of side.pokemon) {\n\t\t\tif (pokemon !== ally && pokemon.searchid === ally.searchid) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tcalculateModifiedStats(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon) {\n\t\tlet stats = {...serverPokemon.stats};\n\t\tlet pokemon = clientPokemon || serverPokemon;\n\t\tconst isPowerTrick = clientPokemon?.volatiles['powertrick'];\n\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\tlet sourceStatName = statName;\n\t\t\tif (isPowerTrick) {\n\t\t\t\tif (statName === 'atk') sourceStatName = 'def';\n\t\t\t\tif (statName === 'def') sourceStatName = 'atk';\n\t\t\t}\n\t\t\tstats[statName] = serverPokemon.stats[sourceStatName];\n\t\t\tif (!clientPokemon) continue;\n\n\t\t\tconst clientStatName = clientPokemon.boosts.spc && (statName === 'spa' || statName === 'spd') ? 'spc' : statName;\n\t\t\tconst boostLevel = clientPokemon.boosts[clientStatName];\n\t\t\tif (boostLevel) {\n\t\t\t\tlet boostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\n\t\t\t\tif (boostLevel > 0) {\n\t\t\t\t\tstats[statName] *= boostTable[boostLevel];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.battle.gen <= 2) boostTable = [1, 100 / 66, 2, 2.5, 100 / 33, 100 / 28, 4];\n\t\t\t\t\tstats[statName] /= boostTable[-boostLevel];\n\t\t\t\t}\n\t\t\t\tstats[statName] = Math.floor(stats[statName]);\n\t\t\t}\n\t\t}\n\n\t\tlet ability = toID(serverPokemon.ability || pokemon.ability || serverPokemon.baseAbility);\n\t\tif (clientPokemon && 'gastroacid' in clientPokemon.volatiles) ability = '' as ID;\n\n\t\t// check for burn, paralysis, guts, quick feet\n\t\tif (pokemon.status) {\n\t\t\tif (this.battle.gen > 2 && ability === 'guts') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t} else if (this.battle.gen < 2 && pokemon.status === 'brn') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\t}\n\n\t\t\tif (this.battle.gen > 2 && ability === 'quickfeet') {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 1.5);\n\t\t\t} else if (pokemon.status === 'par') {\n\t\t\t\tif (this.battle.gen > 6) {\n\t\t\t\t\tstats.spe = Math.floor(stats.spe * 0.5);\n\t\t\t\t} else {\n\t\t\t\t\tstats.spe = Math.floor(stats.spe * 0.25);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// gen 1 doesn't support items\n\t\tif (this.battle.gen <= 1) {\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (stats[statName] > 999) stats[statName] = 999;\n\t\t\t}\n\t\t\treturn stats;\n\t\t}\n\n\t\tlet item = toID(serverPokemon.item);\n\t\tif (ability === 'klutz' && item !== 'machobrace') item = '' as ID;\n\t\tconst speciesForme = clientPokemon ? clientPokemon.getSpeciesForme() : serverPokemon.speciesForme;\n\t\tlet species = Dex.getSpecies(speciesForme).baseSpecies;\n\n\t\t// check for light ball, thick club, metal/quick powder\n\t\t// the only stat modifying items in gen 2 were light ball, thick club, metal powder\n\t\tif (item === 'lightball' && species === 'Pikachu') {\n\t\t\tif (this.battle.gen >= 4) stats.atk *= 2;\n\t\t\tstats.spa *= 2;\n\t\t}\n\n\t\tif (item === 'thickclub') {\n\t\t\tif (species === 'Marowak' || species === 'Cubone') {\n\t\t\t\tstats.atk *= 2;\n\t\t\t}\n\t\t}\n\n\t\tif (species === 'Ditto' && !(clientPokemon && 'transform' in clientPokemon.volatiles)) {\n\t\t\tif (item === 'quickpowder') {\n\t\t\t\tstats.spe *= 2;\n\t\t\t}\n\t\t\tif (item === 'metalpowder') {\n\t\t\t\tif (this.battle.gen === 2) {\n\t\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t} else {\n\t\t\t\t\tstats.def *= 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check abilities other than Guts and Quick Feet\n\t\t// check items other than light ball, thick club, metal/quick powder\n\t\tif (this.battle.gen <= 2) {\n\t\t\treturn stats;\n\t\t}\n\n\t\tlet weather = this.battle.weather;\n\t\tif (weather) {\n\t\t\t// Check if anyone has an anti-weather ability\n\t\t\touter: for (const side of this.battle.sides) {\n\t\t\t\tfor (const active of side.active) {\n\t\t\t\t\tif (active && ['Air Lock', 'Cloud Nine'].includes(active.ability)) {\n\t\t\t\t\t\tweather = '' as ID;\n\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (item === 'choiceband' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t}\n\t\tif (ability === 'purepower' || ability === 'hugepower') {\n\t\t\tstats.atk *= 2;\n\t\t}\n\t\tif (ability === 'hustle' || (ability === 'gorillatactics' && !clientPokemon?.volatiles['dynamax'])) {\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t}\n\t\tif (weather) {\n\t\t\tif (this.battle.gen >= 4 && this.pokemonHasType(serverPokemon, 'Rock') && weather === 'sandstorm') {\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'sandrush' && weather === 'sandstorm') {\n\t\t\t\tstats.spe *= 2;\n\t\t\t}\n\t\t\tif (ability === 'slushrush' && weather === 'hail') {\n\t\t\t\tstats.spe *= 2;\n\t\t\t}\n\t\t\tif (item !== 'utilityumbrella') {\n\t\t\t\tif (weather === 'sunnyday' || weather === 'desolateland') {\n\t\t\t\t\tif (ability === 'solarpower') {\n\t\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t\t}\n\t\t\t\t\tlet allyActive = clientPokemon?.side.active;\n\t\t\t\t\tif (allyActive) {\n\t\t\t\t\t\tfor (const ally of allyActive) {\n\t\t\t\t\t\t\tif (!ally || ally.fainted) continue;\n\t\t\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\t\t\t\tif (allyAbility === 'Flower Gift' && (ally.getSpecies().baseSpecies === 'Cherrim' || this.battle.gen <= 4)) {\n\t\t\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ability === 'chlorophyll' && (weather === 'sunnyday' || weather === 'desolateland')) {\n\t\t\t\t\tstats.spe *= 2;\n\t\t\t\t}\n\t\t\t\tif (ability === 'swiftswim' && (weather === 'raindance' || weather === 'primordialsea')) {\n\t\t\t\t\tstats.spe *= 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ability === 'defeatist' && serverPokemon.hp <= serverPokemon.maxhp / 2) {\n\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\tstats.spa = Math.floor(stats.spa * 0.5);\n\t\t}\n\t\tif (clientPokemon) {\n\t\t\tif ('slowstart' in clientPokemon.volatiles) {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.5);\n\t\t\t}\n\t\t\tif (ability === 'unburden' && 'itemremoved' in clientPokemon.volatiles && !item) {\n\t\t\t\tstats.spe *= 2;\n\t\t\t}\n\t\t}\n\t\tif (ability === 'marvelscale' && pokemon.status) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t}\n\t\tif (item === 'eviolite' && Dex.getSpecies(pokemon.speciesForme).evos) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (ability === 'grasspelt' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t}\n\t\tif (ability === 'surgesurfer' && this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\tstats.spe *= 2;\n\t\t}\n\t\tif (item === 'choicespecs' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t}\n\t\tif (item === 'deepseatooth' && species === 'Clamperl') {\n\t\t\tstats.spa *= 2;\n\t\t}\n\t\tif (item === 'souldew' && this.battle.gen <= 6 && (species === 'Latios' || species === 'Latias')) {\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (clientPokemon && (ability === 'plus' || ability === 'minus')) {\n\t\t\tlet allyActive = clientPokemon.side.active;\n\t\t\tif (allyActive.length > 1) {\n\t\t\t\tlet abilityName = (ability === 'plus' ? 'Plus' : 'Minus');\n\t\t\t\tfor (const ally of allyActive) {\n\t\t\t\t\tif (!ally || ally === clientPokemon || ally.fainted) continue;\n\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\t\tif (allyAbility !== 'Plus' && allyAbility !== 'Minus') continue;\n\t\t\t\t\tif (this.battle.gen <= 4 && allyAbility === abilityName) continue;\n\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (item === 'assaultvest') {\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (item === 'deepseascale' && species === 'Clamperl') {\n\t\t\tstats.spd *= 2;\n\t\t}\n\t\tif (item === 'choicescarf' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.spe = Math.floor(stats.spe * 1.5);\n\t\t}\n\t\tif (item === 'ironball' || item === 'machobrace' || /power(?!herb)/.test(item)) {\n\t\t\tstats.spe = Math.floor(stats.spe * 0.5);\n\t\t}\n\t\tif (ability === 'furcoat') {\n\t\t\tstats.def *= 2;\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\trenderStats(clientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, short?: boolean) {\n\t\tconst isTransformed = clientPokemon?.volatiles.transform;\n\t\tif (!serverPokemon || isTransformed) {\n\t\t\tif (!clientPokemon) throw new Error('Must pass either clientPokemon or serverPokemon');\n\t\t\tlet [min, max] = this.getSpeedRange(clientPokemon);\n\t\t\treturn '<p><small>Spe</small> ' + min + ' to ' + max + ' <small>(before items/abilities/modifiers)</small></p>';\n\t\t}\n\t\tconst stats = serverPokemon.stats;\n\t\tconst modifiedStats = this.calculateModifiedStats(clientPokemon, serverPokemon);\n\n\t\tlet buf = '<p>';\n\n\t\tif (!short) {\n\t\t\tlet hasModifiedStat = false;\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\n\t\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\n\t\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\n\t\t\t\tbuf += '' + BattleText[statLabel].statShortName + '&nbsp;</small>';\n\t\t\t\tbuf += '' + stats[statName];\n\t\t\t\tif (modifiedStats[statName] !== stats[statName]) hasModifiedStat = true;\n\t\t\t}\n\t\t\tbuf += '</p>';\n\n\t\t\tif (!hasModifiedStat) return buf;\n\n\t\t\tbuf += '<p><small>(After stat modifiers:)</small></p>';\n\t\t\tbuf += '<p>';\n\t\t}\n\n\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\n\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\n\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\n\t\t\tbuf += '' + BattleText[statLabel].statShortName + '&nbsp;</small>';\n\t\t\tif (modifiedStats[statName] === stats[statName]) {\n\t\t\t\tbuf += '' + modifiedStats[statName];\n\t\t\t} else if (modifiedStats[statName] < stats[statName]) {\n\t\t\t\tbuf += '<strong class=\"stat-lowered\">' + modifiedStats[statName] + '</strong>';\n\t\t\t} else {\n\t\t\t\tbuf += '<strong class=\"stat-boosted\">' + modifiedStats[statName] + '</strong>';\n\t\t\t}\n\t\t}\n\t\tbuf += '</p>';\n\t\treturn buf;\n\t}\n\n\tgetPPUseText(moveTrackRow: [string, number], showKnown?: boolean) {\n\t\tlet [moveName, ppUsed] = moveTrackRow;\n\t\tlet move;\n\t\tlet maxpp;\n\t\tif (moveName.charAt(0) === '*') {\n\t\t\t// Transformed move\n\t\t\tmove = this.battle.dex.getMove(moveName.substr(1));\n\t\t\tmaxpp = 5;\n\t\t} else {\n\t\t\tmove = this.battle.dex.getMove(moveName);\n\t\t\tmaxpp = move.noPPBoosts ? move.pp : Math.floor(move.pp * 8 / 5);\n\t\t}\n\t\tconst bullet = moveName.charAt(0) === '*' || move.isZ ? '<span style=\"color:#888\">&#8226;</span>' : '&#8226;';\n\t\tif (ppUsed === Infinity) {\n\t\t\treturn `${bullet} ${move.name} <small>(0/${maxpp})</small>`;\n\t\t}\n\t\tif (ppUsed || moveName.charAt(0) === '*') {\n\t\t\treturn `${bullet} ${move.name} <small>(${maxpp - ppUsed}/${maxpp})</small>`;\n\t\t}\n\t\treturn `${bullet} ${move.name} ${showKnown ? ' <small>(revealed)</small>' : ''}`;\n\t}\n\n\tppUsed(move: Move, pokemon: Pokemon) {\n\t\tfor (let [moveName, ppUsed] of pokemon.moveTrack) {\n\t\t\tif (moveName.charAt(0) === '*') moveName = moveName.substr(1);\n\t\t\tif (move.name === moveName) return ppUsed;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Calculates possible Speed stat range of an opponent\n\t */\n\tgetSpeedRange(pokemon: Pokemon): [number, number] {\n\t\tlet level = pokemon.level;\n\t\tlet baseSpe = pokemon.getSpecies().baseStats['spe'];\n\t\tlet tier = this.battle.tier;\n\t\tlet gen = this.battle.gen;\n\t\tlet isRandomBattle = tier.includes('Random Battle') ||\n\t\t\t(tier.includes('Random') && tier.includes('Battle') && gen >= 6);\n\n\t\tlet minNature = (isRandomBattle || gen < 3) ? 1 : 0.9;\n\t\tlet maxNature = (isRandomBattle || gen < 3) ? 1 : 1.1;\n\t\tlet maxIv = (gen < 3) ? 30 : 31;\n\n\t\tlet min;\n\t\tlet max;\n\t\tconst tr = Math.trunc || Math.floor;\n\t\tif (tier.includes(\"Let's Go\")) {\n\t\t\tmin = tr(tr(tr(2 * baseSpe * level / 100 + 5) * minNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\n\t\t\tmax = tr(tr(tr((2 * baseSpe + maxIv) * level / 100 + 5) * maxNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\n\t\t\tif (tier.includes('No Restrictions')) max += 200;\n\t\t\telse if (tier.includes('Random')) max += 20;\n\t\t} else {\n\t\t\tlet maxIvEvOffset = maxIv + ((isRandomBattle && gen >= 3) ? 21 : 63);\n\t\t\tmin = tr(tr(2 * baseSpe * level / 100 + 5) * minNature);\n\t\t\tmax = tr(tr((2 * baseSpe + maxIvEvOffset) * level / 100 + 5) * maxNature);\n\t\t}\n\t\treturn [min, max];\n\t}\n\n\t/**\n\t * Gets the proper current type for moves with a variable type.\n\t */\n\tgetMoveType(move: Move, value: ModifiableValue, forMaxMove?: boolean | Move): [TypeName, 'Physical' | 'Special' | 'Status'] {\n\t\tlet moveType = move.type;\n\t\tlet category = move.category;\n\t\tif (category === 'Status' && forMaxMove) return ['Normal', 'Status']; // Max Guard\n\t\t// can happen in obscure situations\n\t\tif (!value.pokemon) return [moveType, category];\n\n\t\tlet pokemonTypes = value.pokemon.getTypeList(value.serverPokemon);\n\t\tvalue.reset();\n\t\tif (move.id === 'revelationdance') {\n\t\t\tmoveType = pokemonTypes[0];\n\t\t}\n\t\t// Moves that require an item to change their type.\n\t\tlet item = Dex.getItem(value.itemName);\n\t\tif (move.id === 'multiattack' && item.onMemory) {\n\t\t\tif (value.itemModify(0)) moveType = item.onMemory;\n\t\t}\n\t\tif (move.id === 'judgment' && item.onPlate && !item.zMoveType) {\n\t\t\tif (value.itemModify(0)) moveType = item.onPlate;\n\t\t}\n\t\tif (move.id === 'technoblast' && item.onDrive) {\n\t\t\tif (value.itemModify(0)) moveType = item.onDrive;\n\t\t}\n\t\tif (move.id === 'naturalgift' && item.naturalGift) {\n\t\t\tif (value.itemModify(0)) moveType = item.naturalGift.type;\n\t\t}\n\t\t// Weather and pseudo-weather type changes.\n\t\tif (move.id === 'weatherball' && value.weatherModify(0)) {\n\t\t\tswitch (this.battle.weather) {\n\t\t\tcase 'sunnyday':\n\t\t\tcase 'desolateland':\n\t\t\t\tif (item.id === 'utilityumbrella') break;\n\t\t\t\tmoveType = 'Fire';\n\t\t\t\tbreak;\n\t\t\tcase 'raindance':\n\t\t\tcase 'primordialsea':\n\t\t\t\tif (item.id === 'utilityumbrella') break;\n\t\t\t\tmoveType = 'Water';\n\t\t\t\tbreak;\n\t\t\tcase 'sandstorm':\n\t\t\t\tmoveType = 'Rock';\n\t\t\t\tbreak;\n\t\t\tcase 'hail':\n\t\t\t\tmoveType = 'Ice';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terrainpulse') {\n\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\tmoveType = 'Electric';\n\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\tmoveType = 'Grass';\n\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\t\tmoveType = 'Fairy';\n\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\n\t\t\t\tmoveType = 'Psychic';\n\t\t\t}\n\t\t}\n\n\t\t// Aura Wheel as Morpeko-Hangry changes the type to Dark\n\t\tif (move.id === 'aurawheel' && value.pokemon.getSpeciesForme() === 'Morpeko-Hangry') {\n\t\t\tmoveType = 'Dark';\n\t\t}\n\n\t\t// Other abilities that change the move type.\n\t\tconst noTypeOverride = [\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t];\n\t\tconst allowTypeOverride = !forMaxMove && !noTypeOverride.includes(move.id);\n\n\t\tif (allowTypeOverride && category !== 'Status' && !move.isZ) {\n\t\t\tif (moveType === 'Normal') {\n\t\t\t\tif (value.abilityModify(0, 'Aerilate')) moveType = 'Flying';\n\t\t\t\tif (value.abilityModify(0, 'Galvanize')) moveType = 'Electric';\n\t\t\t\tif (value.abilityModify(0, 'Pixilate')) moveType = 'Fairy';\n\t\t\t\tif (value.abilityModify(0, 'Refrigerate')) moveType = 'Ice';\n\t\t\t}\n\t\t\tif (value.abilityModify(0, 'Normalize')) moveType = 'Normal';\n\t\t}\n\t\t// There aren't any max moves with the sound flag, but if there were, Liquid Voice would make them water type\n\t\tconst isSound = !!(forMaxMove ? this.getMaxMoveFromType(moveType, forMaxMove !== true && forMaxMove || undefined) : move).flags['sound'];\n\t\tif (allowTypeOverride && isSound && value.abilityModify(0, 'Liquid Voice')) {\n\t\t\tmoveType = 'Water';\n\t\t}\n\t\tif (this.battle.gen <= 3 && category !== 'Status') {\n\t\t\tcategory = Dex.getGen3Category(moveType);\n\t\t}\n\t\treturn [moveType, category];\n\t}\n\n\t// Gets the current accuracy for a move.\n\tgetMoveAccuracy(move: Move, value: ModifiableValue, target?: Pokemon) {\n\t\tvalue.reset(move.accuracy === true ? 0 : move.accuracy, true);\n\n\t\tlet pokemon = value.pokemon!;\n\t\tif (move.id === 'toxic' && this.battle.gen >= 6 && this.pokemonHasType(pokemon, 'Poison')) {\n\t\t\tvalue.set(0, \"Poison type\");\n\t\t\treturn value;\n\t\t}\n\t\tif (move.id === 'blizzard') {\n\t\t\tvalue.weatherModify(0, 'Hail');\n\t\t}\n\t\tif (move.id === 'hurricane' || move.id === 'thunder') {\n\t\t\tvalue.weatherModify(0, 'Rain Dance');\n\t\t\tvalue.weatherModify(0, 'Primordial Sea');\n\t\t\tif (value.tryWeather('Sunny Day')) value.set(50, 'Sunny Day');\n\t\t\tif (value.tryWeather('Desolate Land')) value.set(50, 'Desolate Land');\n\t\t}\n\t\tvalue.abilityModify(0, 'No Guard');\n\t\tif (!value.value) return value;\n\t\tif (move.ohko) {\n\t\t\tif (this.battle.gen === 1) {\n\t\t\t\tvalue.set(value.value, `fails if target's Speed is higher`);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (move.id === 'sheercold' && this.battle.gen >= 7) {\n\t\t\t\tif (!this.pokemonHasType(pokemon, 'Ice')) value.set(20, 'not Ice-type');\n\t\t\t}\n\t\t\tif (target) {\n\t\t\t\tif (pokemon.level < target.level) {\n\t\t\t\t\tvalue.reset(0);\n\t\t\t\t\tvalue.set(0, \"FAILS: target's level is higher\");\n\t\t\t\t} else if (pokemon.level > target.level) {\n\t\t\t\t\tvalue.set(value.value + pokemon.level - target.level, \"+1% per level above target\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (pokemon.level < 100) value.set(value.value, \"fails if target's level is higher\");\n\t\t\t\tif (pokemon.level > 1) value.set(value.value, \"+1% per level above target\");\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t\tif (pokemon?.boosts.accuracy) {\n\t\t\tif (pokemon.boosts.accuracy > 0) {\n\t\t\t\tvalue.modify((pokemon.boosts.accuracy + 3) / 3);\n\t\t\t} else {\n\t\t\t\tvalue.modify(3 / (3 - pokemon.boosts.accuracy));\n\t\t\t}\n\t\t}\n\t\tif (move.category === 'Physical') {\n\t\t\tvalue.abilityModify(0.8, \"Hustle\");\n\t\t}\n\t\tvalue.abilityModify(1.3, \"Compound Eyes\");\n\t\tfor (const active of pokemon.side.active) {\n\t\t\tif (!active || active.fainted) continue;\n\t\t\tlet ability = this.getAllyAbility(active);\n\t\t\tif (ability === 'Victory Star') {\n\t\t\t\tvalue.modify(1.1, \"Victory Star\");\n\t\t\t}\n\t\t}\n\t\tvalue.itemModify(1.1, \"Wide Lens\");\n\t\tif (this.battle.hasPseudoWeather('Gravity')) {\n\t\t\tvalue.modify(5 / 3, \"Gravity\");\n\t\t}\n\t\treturn value;\n\t}\n\n\t// Gets the proper current base power for moves which have a variable base power.\n\t// Takes into account the target for some moves.\n\t// If it is unsure of the actual base power, it gives an estimate.\n\tgetMoveBasePower(move: Move, moveType: TypeName, value: ModifiableValue, target: Pokemon | null = null) {\n\t\tconst pokemon = value.pokemon!;\n\t\tconst serverPokemon = value.serverPokemon;\n\n\t\t// apply modifiers for moves that depend on the actual stats\n\t\tconst modifiedStats = this.calculateModifiedStats(pokemon, serverPokemon);\n\n\t\tvalue.reset(move.basePower);\n\n\t\tif (move.id === 'acrobatics') {\n\t\t\tif (!serverPokemon.item) {\n\t\t\t\tvalue.modify(2, \"Acrobatics + no item\");\n\t\t\t}\n\t\t}\n\t\tif (['crushgrip', 'wringout'].includes(move.id) && target) {\n\t\t\tvalue.set(\n\t\t\t\tMath.floor(Math.floor((120 * (100 * Math.floor(target.hp * 4096 / target.maxhp)) + 2048 - 1) / 4096) / 100) || 1,\n\t\t\t\t'approximate'\n\t\t\t);\n\t\t}\n\t\tif (move.id === 'brine' && target && target.hp * 2 <= target.maxhp) {\n\t\t\tvalue.modify(2, 'Brine + target below half HP');\n\t\t}\n\t\tif (move.id === 'eruption' || move.id === 'waterspout' || move.id === 'dragonenergy') {\n\t\t\tvalue.set(Math.floor(150 * pokemon.hp / pokemon.maxhp) || 1);\n\t\t}\n\t\tif (move.id === 'facade' && !['', 'slp', 'frz'].includes(pokemon.status)) {\n\t\t\tvalue.modify(2, 'Facade + status');\n\t\t}\n\t\tif (move.id === 'flail' || move.id === 'reversal') {\n\t\t\tlet multiplier;\n\t\t\tlet ratios;\n\t\t\tif (this.battle.gen > 4) {\n\t\t\t\tmultiplier = 48;\n\t\t\t\tratios = [2, 5, 10, 17, 33];\n\t\t\t} else {\n\t\t\t\tmultiplier = 64;\n\t\t\t\tratios = [2, 6, 13, 22, 43];\n\t\t\t}\n\t\t\tlet ratio = pokemon.hp * multiplier / pokemon.maxhp;\n\t\t\tlet basePower;\n\t\t\tif (ratio < ratios[0]) basePower = 200;\n\t\t\telse if (ratio < ratios[1]) basePower = 150;\n\t\t\telse if (ratio < ratios[2]) basePower = 100;\n\t\t\telse if (ratio < ratios[3]) basePower = 80;\n\t\t\telse if (ratio < ratios[4]) basePower = 40;\n\t\t\telse basePower = 20;\n\t\t\tvalue.set(basePower);\n\t\t}\n\t\tif (move.id === 'hex' && target?.status) {\n\t\t\tvalue.modify(2, 'Hex + status');\n\t\t}\n\t\tif (move.id === 'punishment' && target) {\n\t\t\tlet boostCount = 0;\n\t\t\tfor (const boost of Object.values(target.boosts)) {\n\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t}\n\t\t\tvalue.set(Math.min(60 + 20 * boostCount, 200));\n\t\t}\n\t\tif (move.id === 'smellingsalts' && target) {\n\t\t\tif (target.status === 'par') {\n\t\t\t\tvalue.modify(2, 'Smelling Salts + Paralysis');\n\t\t\t}\n\t\t}\n\t\tif (['storedpower', 'powertrip'].includes(move.id) && target) {\n\t\t\tlet boostCount = 0;\n\t\t\tfor (const boost of Object.values(pokemon.boosts)) {\n\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t}\n\t\t\tvalue.set(20 + 20 * boostCount);\n\t\t}\n\t\tif (move.id === 'trumpcard') {\n\t\t\tconst ppLeft = 5 - this.ppUsed(move, pokemon);\n\t\t\tlet basePower = 40;\n\t\t\tif (ppLeft === 1) basePower = 200;\n\t\t\telse if (ppLeft === 2) basePower = 80;\n\t\t\telse if (ppLeft === 3) basePower = 60;\n\t\t\telse if (ppLeft === 4) basePower = 50;\n\t\t\tvalue.set(basePower);\n\t\t}\n\t\tif (move.id === 'venoshock' && target) {\n\t\t\tif (['psn', 'tox'].includes(target.status)) {\n\t\t\t\tvalue.modify(2, 'Venoshock + Poison');\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'wakeupslap' && target) {\n\t\t\tif (target.status === 'slp') {\n\t\t\t\tvalue.modify(2, 'Wake-Up Slap + Sleep');\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'weatherball') {\n\t\t\tif (this.battle.weather !== 'deltastream') {\n\t\t\t\tvalue.weatherModify(2);\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terrainpulse') {\n\t\t\tif (\n\t\t\t\tthis.battle.hasPseudoWeather('Electric Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Misty Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain')\n\t\t\t) {\n\t\t\t\tvalue.modify(2, 'Terrain Pulse boost');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'watershuriken' && pokemon.getSpeciesForme() === 'Greninja-Ash' && pokemon.ability === 'Battle Bond'\n\t\t) {\n\t\t\tvalue.set(20, 'Battle Bond');\n\t\t}\n\t\t// Moves that check opponent speed\n\t\tif (move.id === 'electroball' && target) {\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\n\t\t\tlet minRatio = (modifiedStats.spe / maxSpe);\n\t\t\tlet maxRatio = (modifiedStats.spe / minSpe);\n\t\t\tlet min;\n\t\t\tlet max;\n\n\t\t\tif (minRatio >= 4) min = 150;\n\t\t\telse if (minRatio >= 3) min = 120;\n\t\t\telse if (minRatio >= 2) min = 80;\n\t\t\telse if (minRatio >= 1) min = 60;\n\t\t\telse min = 40;\n\n\t\t\tif (maxRatio >= 4) max = 150;\n\t\t\telse if (maxRatio >= 3) max = 120;\n\t\t\telse if (maxRatio >= 2) max = 80;\n\t\t\telse if (maxRatio >= 1) max = 60;\n\t\t\telse max = 40;\n\n\t\t\tvalue.setRange(min, max);\n\t\t}\n\t\tif (move.id === 'gyroball' && target) {\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\n\t\t\tlet min = (Math.floor(25 * minSpe / modifiedStats.spe) || 1);\n\t\t\tif (min > 150) min = 150;\n\t\t\tlet max = (Math.floor(25 * maxSpe / modifiedStats.spe) || 1);\n\t\t\tif (max > 150) max = 150;\n\t\t\tvalue.setRange(min, max);\n\t\t}\n\t\t// Moves which have base power changed due to items\n\t\tif (serverPokemon.item) {\n\t\t\tlet item = Dex.getItem(serverPokemon.item);\n\t\t\tif (move.id === 'fling' && item.fling) {\n\t\t\t\tvalue.itemModify(item.fling.basePower);\n\t\t\t}\n\t\t\tif (move.id === 'naturalgift') {\n\t\t\t\tvalue.itemModify(item.naturalGift.basePower);\n\t\t\t}\n\t\t}\n\t\t// Moves which have base power changed according to weight\n\t\tif (['lowkick', 'grassknot', 'heavyslam', 'heatcrash'].includes(move.id)) {\n\t\t\tlet isGKLK = ['lowkick', 'grassknot'].includes(move.id);\n\t\t\tif (target) {\n\t\t\t\tlet targetWeight = target.getWeightKg();\n\t\t\t\tlet pokemonWeight = pokemon.getWeightKg(serverPokemon);\n\t\t\t\tlet basePower;\n\t\t\t\tif (isGKLK) {\n\t\t\t\t\tbasePower = 20;\n\t\t\t\t\tif (targetWeight >= 200) basePower = 120;\n\t\t\t\t\telse if (targetWeight >= 100) basePower = 100;\n\t\t\t\t\telse if (targetWeight >= 50) basePower = 80;\n\t\t\t\t\telse if (targetWeight >= 25) basePower = 60;\n\t\t\t\t\telse if (targetWeight >= 10) basePower = 40;\n\t\t\t\t} else {\n\t\t\t\t\tbasePower = 40;\n\t\t\t\t\tif (pokemonWeight > targetWeight * 5) basePower = 120;\n\t\t\t\t\telse if (pokemonWeight > targetWeight * 4) basePower = 100;\n\t\t\t\t\telse if (pokemonWeight > targetWeight * 3) basePower = 80;\n\t\t\t\t\telse if (pokemonWeight > targetWeight * 2) basePower = 60;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['dynamax']) {\n\t\t\t\t\tvalue.set(0, 'blocked by target\\'s Dynamax');\n\t\t\t\t} else {\n\t\t\t\t\tvalue.set(basePower);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue.setRange(isGKLK ? 20 : 40, 120);\n\t\t\t}\n\t\t}\n\t\tif (!value.value) return value;\n\n\t\t// Other ability boosts\n\t\tif (pokemon.status === 'brn' && move.category === 'Special') {\n\t\t\tvalue.abilityModify(1.5, \"Flare Boost\");\n\t\t}\n\t\tif (move.flags['pulse']) {\n\t\t\tvalue.abilityModify(1.5, \"Mega Launcher\");\n\t\t}\n\t\tif (move.flags['bite']) {\n\t\t\tvalue.abilityModify(1.5, \"Strong Jaw\");\n\t\t}\n\t\tif (value.value <= 60) {\n\t\t\tvalue.abilityModify(1.5, \"Technician\");\n\t\t}\n\t\tif (['psn', 'tox'].includes(pokemon.status) && move.category === 'Physical') {\n\t\t\tvalue.abilityModify(1.5, \"Toxic Boost\");\n\t\t}\n\t\tif (this.battle.gen > 2 && serverPokemon.status === 'brn' && move.id !== 'facade' && move.category === 'Physical') {\n\t\t\tif (!value.tryAbility(\"Guts\")) value.modify(0.5, 'Burn');\n\t\t}\n\t\tif (['Rock', 'Ground', 'Steel'].includes(moveType) && this.battle.weather === 'sandstorm') {\n\t\t\tif (value.tryAbility(\"Sand Force\")) value.weatherModify(1.3, \"Sandstorm\", \"Sand Force\");\n\t\t}\n\t\tif (move.secondaries) {\n\t\t\tvalue.abilityModify(1.3, \"Sheer Force\");\n\t\t}\n\t\tif (move.flags['contact']) {\n\t\t\tvalue.abilityModify(1.3, \"Tough Claws\");\n\t\t}\n\t\tif (moveType === 'Steel') {\n\t\t\tvalue.abilityModify(1.5, \"Steely Spirit\");\n\t\t}\n\t\tif (move.flags['sound']) {\n\t\t\tvalue.abilityModify(1.3, \"Punk Rock\");\n\t\t}\n\t\tif (target) {\n\t\t\tif ([\"MF\", \"FM\"].includes(pokemon.gender + target.gender)) {\n\t\t\t\tvalue.abilityModify(0.75, \"Rivalry\");\n\t\t\t} else if ([\"MM\", \"FF\"].includes(pokemon.gender + target.gender)) {\n\t\t\t\tvalue.abilityModify(1.25, \"Rivalry\");\n\t\t\t}\n\t\t}\n\t\tconst noTypeOverride = [\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t];\n\t\tif (move.category !== 'Status' && !noTypeOverride.includes(move.id) && !move.isZ && !move.isMax) {\n\t\t\tif (move.type === 'Normal') {\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Aerilate\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Galvanize\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Pixilate\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Refrigerate\");\n\t\t\t}\n\t\t\tif (this.battle.gen > 6) {\n\t\t\t\tvalue.abilityModify(1.2, \"Normalize\");\n\t\t\t}\n\t\t}\n\t\tif (move.flags['punch']) {\n\t\t\tvalue.abilityModify(1.2, 'Iron Fist');\n\t\t}\n\t\tif (move.recoil || move.hasCrashDamage) {\n\t\t\tvalue.abilityModify(1.2, 'Reckless');\n\t\t}\n\n\t\tif (move.category !== 'Status') {\n\t\t\tlet auraBoosted = '';\n\t\t\tlet auraBroken = false;\n\t\t\tfor (const ally of pokemon.side.active) {\n\t\t\t\tif (!ally || ally.fainted) continue;\n\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\tif (moveType === 'Fairy' && allyAbility === 'Fairy Aura') {\n\t\t\t\t\tauraBoosted = 'Fairy Aura';\n\t\t\t\t} else if (moveType === 'Dark' && allyAbility === 'Dark Aura') {\n\t\t\t\t\tauraBoosted = 'Dark Aura';\n\t\t\t\t} else if (allyAbility === 'Aura Break') {\n\t\t\t\t\tauraBroken = true;\n\t\t\t\t} else if (allyAbility === 'Battery') {\n\t\t\t\t\tif (ally !== pokemon && move.category === 'Special') {\n\t\t\t\t\t\tvalue.modify(1.3, 'Battery');\n\t\t\t\t\t}\n\t\t\t\t} else if (allyAbility === 'Power Spot') {\n\t\t\t\t\tif (ally !== pokemon) {\n\t\t\t\t\t\tvalue.modify(1.3, 'Power Spot');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const foe of pokemon.side.foe.active) {\n\t\t\t\tif (!foe || foe.fainted) continue;\n\t\t\t\tif (foe.ability === 'Fairy Aura') {\n\t\t\t\t\tif (moveType === 'Fairy') auraBoosted = 'Fairy Aura';\n\t\t\t\t} else if (foe.ability === 'Dark Aura') {\n\t\t\t\t\tif (moveType === 'Dark') auraBoosted = 'Dark Aura';\n\t\t\t\t} else if (foe.ability === 'Aura Break') {\n\t\t\t\t\tauraBroken = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (auraBoosted) {\n\t\t\t\tif (auraBroken) {\n\t\t\t\t\tvalue.modify(0.75, auraBoosted + ' + Aura Break');\n\t\t\t\t} else {\n\t\t\t\t\tvalue.modify(1.33, auraBoosted);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Terrain\n\t\tif ((this.battle.hasPseudoWeather('Electric Terrain') && moveType === 'Electric') ||\n\t\t\t(this.battle.hasPseudoWeather('Grassy Terrain') && moveType === 'Grass') ||\n\t\t\t(this.battle.hasPseudoWeather('Psychic Terrain') && moveType === 'Psychic')) {\n\t\t\tif (pokemon.isGrounded(serverPokemon)) {\n\t\t\t\tvalue.modify(this.battle.gen > 7 ? 1.3 : 1.5, 'Terrain boost');\n\t\t\t}\n\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain') && moveType === 'Dragon') {\n\t\t\tif (target ? target.isGrounded() : true) {\n\t\t\t\tvalue.modify(0.5, 'Misty Terrain + grounded target');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'expandingforce' &&\n\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain') &&\n\t\t\tpokemon.isGrounded(serverPokemon)\n\t\t) {\n\t\t\tvalue.modify(1.5, 'Expanding Force + Psychic Terrain boost');\n\t\t}\n\t\tif (move.id === 'mistyexplosion' && this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\tvalue.modify(1.5, 'Misty Explosion + Misty Terrain boost');\n\t\t}\n\t\tif (move.id === 'risingvoltage' && this.battle.hasPseudoWeather('Electric Terrain') && target?.isGrounded()) {\n\t\t\tvalue.modify(2, 'Rising Voltage + Electric Terrain boost');\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'steelroller' &&\n\t\t\t!this.battle.hasPseudoWeather('Electric Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Grassy Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Misty Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Psychic Terrain')\n\t\t) {\n\t\t\tvalue.set(0, 'no Terrain');\n\t\t}\n\n\t\t// Item\n\t\tvalue = this.getItemBoost(move, value, moveType);\n\n\t\treturn value;\n\t}\n\n\tstatic incenseTypes: {[itemName: string]: TypeName} = {\n\t\t'Odd Incense': 'Psychic',\n\t\t'Rock Incense': 'Rock',\n\t\t'Rose Incense': 'Grass',\n\t\t'Sea Incense': 'Water',\n\t\t'Wave Incense': 'Water',\n\t};\n\tstatic itemTypes: {[itemName: string]: TypeName} = {\n\t\t'Black Belt': 'Fighting',\n\t\t'Black Glasses': 'Dark',\n\t\t'Charcoal': 'Fire',\n\t\t'Dragon Fang': 'Dragon',\n\t\t'Hard Stone': 'Rock',\n\t\t'Magnet': 'Electric',\n\t\t'Metal Coat': 'Steel',\n\t\t'Miracle Seed': 'Grass',\n\t\t'Mystic Water': 'Water',\n\t\t'Never-Melt Ice': 'Ice',\n\t\t'Poison Barb': 'Poison',\n\t\t'Sharp Beak': 'Flying',\n\t\t'Silk Scarf': 'Normal',\n\t\t'Silver Powder': 'Bug',\n\t\t'Soft Sand': 'Ground',\n\t\t'Spell Tag': 'Ghost',\n\t\t'Twisted Spoon': 'Psychic',\n\t};\n\tstatic orbUsers: {[speciesForme: string]: string} = {\n\t\t'Latias': 'Soul Dew',\n\t\t'Latios': 'Soul Dew',\n\t\t'Dialga': 'Adamant Orb',\n\t\t'Palkia': 'Lustrous Orb',\n\t\t'Giratina': 'Griseous Orb',\n\t};\n\tstatic orbTypes: {[itemName: string]: TypeName} = {\n\t\t'Soul Dew': 'Psychic',\n\t\t'Adamant Orb': 'Steel',\n\t\t'Lustrous Orb': 'Water',\n\t\t'Griseous Orb': 'Ghost',\n\t};\n\tstatic noGemMoves = [\n\t\t'Fire Pledge',\n\t\t'Fling',\n\t\t'Grass Pledge',\n\t\t'Struggle',\n\t\t'Water Pledge',\n\t];\n\tgetItemBoost(move: Move, value: ModifiableValue, moveType: TypeName) {\n\t\tlet item = this.battle.dex.getItem(value.serverPokemon.item);\n\t\tlet itemName = item.name;\n\t\tlet moveName = move.name;\n\n\t\t// Plates\n\t\tif (item.onPlate === moveType && !item.zMove) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Incenses\n\t\tif (BattleTooltips.incenseTypes[item.name] === moveType) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Type-enhancing items\n\t\tif (BattleTooltips.itemTypes[item.name] === moveType) {\n\t\t\tvalue.itemModify(this.battle.gen < 4 ? 1.1 : 1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Pokemon-specific items\n\t\tif (item.name === 'Soul Dew' && this.battle.gen < 7) return value;\n\t\tif (BattleTooltips.orbUsers[Dex.getSpecies(value.serverPokemon.speciesForme).baseSpecies] === item.name &&\n\t\t\t[BattleTooltips.orbTypes[item.name], 'Dragon'].includes(moveType)) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Gems\n\t\tif (BattleTooltips.noGemMoves.includes(moveName)) return value;\n\t\tif (itemName === moveType + ' Gem') {\n\t\t\tvalue.itemModify(this.battle.gen < 6 ? 1.5 : 1.3);\n\t\t\treturn value;\n\t\t}\n\n\t\treturn value;\n\t}\n\tgetPokemonTypes(pokemon: Pokemon | ServerPokemon): ReadonlyArray<TypeName> {\n\t\tif (!(pokemon as Pokemon).getTypes) {\n\t\t\treturn this.battle.dex.getSpecies(pokemon.speciesForme).types;\n\t\t}\n\n\t\treturn (pokemon as Pokemon).getTypeList();\n\t}\n\tpokemonHasType(pokemon: Pokemon | ServerPokemon, type: TypeName, types?: ReadonlyArray<TypeName>) {\n\t\tif (!types) types = this.getPokemonTypes(pokemon);\n\t\tfor (const curType of types) {\n\t\t\tif (curType === type) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tgetAllyAbility(ally: Pokemon) {\n\t\t// this will only be available if the ability announced itself in some way\n\t\tlet allyAbility = Dex.getAbility(ally.ability).name;\n\t\t// otherwise fall back on the original set data sent from the server\n\t\tif (!allyAbility && this.battle.myPokemon) {\n\t\t\tallyAbility = Dex.getAbility(this.battle.myPokemon[ally.slot].ability).name;\n\t\t}\n\t\treturn allyAbility;\n\t}\n\tgetPokemonAbilityData(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon | null | undefined) {\n\t\tconst abilityData: {ability: string, baseAbility: string, possibilities: string[]} = {\n\t\t\tability: '', baseAbility: '', possibilities: [],\n\t\t};\n\t\tif (clientPokemon) {\n\t\t\tif (clientPokemon.ability) {\n\t\t\t\tabilityData.ability = clientPokemon.ability || clientPokemon.baseAbility;\n\t\t\t\tif (clientPokemon.baseAbility) {\n\t\t\t\t\tabilityData.baseAbility = clientPokemon.baseAbility;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst speciesForme = clientPokemon.getSpeciesForme() || serverPokemon?.speciesForme || '';\n\t\t\t\tconst species = this.battle.dex.getSpecies(speciesForme);\n\t\t\t\tif (species.exists && species.abilities) {\n\t\t\t\t\tabilityData.possibilities = [species.abilities['0']];\n\t\t\t\t\tif (species.abilities['1']) abilityData.possibilities.push(species.abilities['1']);\n\t\t\t\t\tif (species.abilities['H']) abilityData.possibilities.push(species.abilities['H']);\n\t\t\t\t\tif (species.abilities['S']) abilityData.possibilities.push(species.abilities['S']);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (serverPokemon) {\n\t\t\tif (!abilityData.ability) abilityData.ability = serverPokemon.ability || serverPokemon.baseAbility;\n\t\t\tif (!abilityData.baseAbility && serverPokemon.baseAbility) {\n\t\t\t\tabilityData.baseAbility = serverPokemon.baseAbility;\n\t\t\t}\n\t\t}\n\t\treturn abilityData;\n\t}\n\tgetPokemonAbilityText(\n\t\tclientPokemon: Pokemon | null,\n\t\tserverPokemon: ServerPokemon | null | undefined,\n\t\tisActive: boolean | undefined,\n\t\thidePossible?: boolean\n\t) {\n\t\tlet text = '';\n\t\tconst abilityData = this.getPokemonAbilityData(clientPokemon, serverPokemon);\n\t\tif (!isActive) {\n\t\t\t// for switch tooltips, only show the original ability\n\t\t\tconst ability = abilityData.baseAbility || abilityData.ability;\n\t\t\tif (ability) text = '<small>Ability:</small> ' + Dex.getAbility(ability).name;\n\t\t} else {\n\t\t\tif (abilityData.ability) {\n\t\t\t\tconst abilityName = Dex.getAbility(abilityData.ability).name;\n\t\t\t\ttext = '<small>Ability:</small> ' + abilityName;\n\t\t\t\tconst baseAbilityName = Dex.getAbility(abilityData.baseAbility).name;\n\t\t\t\tif (baseAbilityName && baseAbilityName !== abilityName) text += ' (base: ' + baseAbilityName + ')';\n\t\t\t}\n\t\t}\n\t\tif (!text && abilityData.possibilities.length && !hidePossible) {\n\t\t\ttext = '<small>Possible abilities:</small> ' + abilityData.possibilities.join(', ');\n\t\t}\n\t\treturn text;\n\t}\n}\n\ntype StatsTable = {hp: number, atk: number, def: number, spa: number, spd: number, spe: number};\n\n/**\n * PokemonSet can be sparse, in which case that entry should be\n * inferred from the rest of the set, according to sensible\n * defaults.\n */\ninterface PokemonSet {\n\t/** Defaults to species name (not including forme), like in games */\n\tname?: string;\n\tspecies: string;\n\t/** Defaults to no item */\n\titem?: string;\n\t/** Defaults to no ability (error in Gen 3+) */\n\tability?: string;\n\tmoves: string[];\n\t/** Defaults to no nature (error in Gen 3+) */\n\tnature?: NatureName;\n\t/** Defaults to random legal gender, NOT subject to gender ratios */\n\tgender?: string;\n\t/** Defaults to flat 252's (200's/0's in Let's Go) (error in gen 3+) */\n\tevs?: StatsTable;\n\t/** Defaults to whatever makes sense - flat 31's unless you have Gyro Ball etc */\n\tivs?: StatsTable;\n\t/** Defaults as you'd expect (100 normally, 50 in VGC-likes, 5 in LC) */\n\tlevel?: number;\n\t/** Defaults to no (error if shiny event) */\n\tshiny?: boolean;\n\t/** Defaults to 255 unless you have Frustration, in which case 0 */\n\thappiness?: number;\n\t/** Defaults to event required ball, otherwise Poké Ball */\n\tpokeball?: string;\n\t/** Defaults to the type of your Hidden Power in Moves, otherwise Dark */\n\thpType?: string;\n\t/** Defaults to no (can only be yes for certain Pokemon) */\n\tgigantamax?: boolean;\n}\n\nclass BattleStatGuesser {\n\tformatid: ID;\n\tdex: ModdedDex;\n\tmoveCount: any = null;\n\thasMove: any = null;\n\n\tignoreEVLimits: boolean;\n\tsupportsEVs: boolean;\n\tsupportsAVs: boolean;\n\n\tconstructor(formatid: ID, modid: ID) {\n\t\tthis.formatid = formatid;\n\t\tthis.dex = modid ? Dex.mod(modid) : formatid ? Dex.mod(formatid.slice(0, 4) as ID) : Dex;\n\t\tthis.ignoreEVLimits = (\n\t\t\tthis.dex.gen < 3 ||\n\t\t\tthis.formatid.endsWith('hackmons') ||\n\t\t\tthis.formatid.includes('metronomebattle') ||\n\t\t\tthis.formatid.endsWith('norestrictions')\n\t\t);\n\t\tthis.supportsEVs = !this.formatid.includes('letsgo');\n\t\tthis.supportsAVs = !this.supportsEVs && this.formatid.endsWith('norestrictions');\n\t}\n\tguess(set: PokemonSet) {\n\t\tlet role = this.guessRole(set);\n\t\tlet comboEVs = this.guessEVs(set, role);\n\t\tlet evs = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0};\n\t\tfor (let stat in evs) {\n\t\t\tevs[stat as StatName] = comboEVs[stat as StatName] || 0;\n\t\t}\n\t\tlet plusStat = comboEVs.plusStat || '';\n\t\tlet minusStat = comboEVs.minusStat || '';\n\t\treturn {role, evs, plusStat, minusStat, moveCount: this.moveCount, hasMove: this.hasMove};\n\t}\n\tguessRole(set: PokemonSet) {\n\t\tif (!set) return '?';\n\t\tif (!set.moves) return '?';\n\n\t\tlet moveCount = {\n\t\t\t'Physical': 0,\n\t\t\t'Special': 0,\n\t\t\t'PhysicalAttack': 0,\n\t\t\t'SpecialAttack': 0,\n\t\t\t'PhysicalSetup': 0,\n\t\t\t'SpecialSetup': 0,\n\t\t\t'Support': 0,\n\t\t\t'Setup': 0,\n\t\t\t'Restoration': 0,\n\t\t\t'Offense': 0,\n\t\t\t'Stall': 0,\n\t\t\t'SpecialStall': 0,\n\t\t\t'PhysicalStall': 0,\n\t\t\t'Fast': 0,\n\t\t\t'Ultrafast': 0,\n\t\t\t'bulk': 0,\n\t\t\t'specialBulk': 0,\n\t\t\t'physicalBulk': 0,\n\t\t};\n\t\tlet hasMove: {[moveid: string]: 1} = {};\n\t\tlet itemid = toID(set.item);\n\t\tlet item = this.dex.getItem(itemid);\n\t\tlet abilityid = toID(set.ability);\n\n\t\tlet species = this.dex.getSpecies(set.species || set.name!);\n\t\tif (item.megaEvolves === species.name) species = this.dex.getSpecies(item.megaStone);\n\t\tif (!species.exists) return '?';\n\t\tlet stats = species.baseStats;\n\n\t\tif (set.moves.length < 1) return '?';\n\t\tlet needsFourMoves = !['unown', 'ditto'].includes(species.id);\n\t\tlet moveids = set.moves.map(toID);\n\t\tif (moveids.includes('lastresort' as ID)) needsFourMoves = false;\n\t\tif (set.moves.length < 4 && needsFourMoves && this.formatid !== 'gen8metronomebattle') {\n\t\t\treturn '?';\n\t\t}\n\n\t\tfor (let i = 0, len = set.moves.length; i < len; i++) {\n\t\t\tlet move = Dex.getMove(set.moves[i]);\n\t\t\thasMove[move.id] = 1;\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tif (['batonpass', 'healingwish', 'lunardance'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t} else if (['metronome', 'assist', 'copycat', 'mefirst'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Physical'] += 0.5;\n\t\t\t\t\tmoveCount['Special'] += 0.5;\n\t\t\t\t} else if (move.id === 'naturepower') {\n\t\t\t\t\tmoveCount['Special']++;\n\t\t\t\t} else if (['protect', 'detect', 'spikyshield', 'kingsshield'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t} else if (move.id === 'wish') {\n\t\t\t\t\tmoveCount['Restoration']++;\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t} else if (move.heal) {\n\t\t\t\t\tmoveCount['Restoration']++;\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t} else if (move.target === 'self') {\n\t\t\t\t\tif (['agility', 'rockpolish', 'shellsmash', 'growth', 'workup'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\n\t\t\t\t\t} else if (['dragondance', 'swordsdance', 'coil', 'bulkup', 'curse', 'bellydrum'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\t\t} else if (['nastyplot', 'tailglow', 'quiverdance', 'calmmind', 'geomancy'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\n\t\t\t\t\t}\n\t\t\t\t\tif (move.id === 'substitute') moveCount['Stall']++;\n\t\t\t\t\tmoveCount['Setup']++;\n\t\t\t\t} else {\n\t\t\t\t\tif (['toxic', 'leechseed', 'willowisp'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t\t}\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t}\n\t\t\t} else if (['counter', 'endeavor', 'metalburst', 'mirrorcoat', 'rapidspin'].includes(move.id)) {\n\t\t\t\tmoveCount['Support']++;\n\t\t\t} else if ([\n\t\t\t\t'nightshade', 'seismictoss', 'psywave', 'superfang', 'naturesmadness', 'foulplay', 'endeavor', 'finalgambit',\n\t\t\t].includes(move.id)) {\n\t\t\t\tmoveCount['Offense']++;\n\t\t\t} else if (move.id === 'fellstinger') {\n\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\tmoveCount['Setup']++;\n\t\t\t} else {\n\t\t\t\tmoveCount[move.category]++;\n\t\t\t\tmoveCount['Offense']++;\n\t\t\t\tif (move.id === 'knockoff') {\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t}\n\t\t\t\tif (['scald', 'voltswitch', 'uturn'].includes(move.id)) {\n\t\t\t\t\tmoveCount[move.category] -= 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (hasMove['batonpass']) moveCount['Support'] += moveCount['Setup'];\n\t\tmoveCount['PhysicalAttack'] = moveCount['Physical'];\n\t\tmoveCount['Physical'] += moveCount['PhysicalSetup'];\n\t\tmoveCount['SpecialAttack'] = moveCount['Special'];\n\t\tmoveCount['Special'] += moveCount['SpecialSetup'];\n\n\t\tif (hasMove['dragondance'] || hasMove['quiverdance']) moveCount['Ultrafast'] = 1;\n\n\t\tlet isFast = (stats.spe >= 80);\n\t\tlet physicalBulk = (stats.hp + 75) * (stats.def + 87);\n\t\tlet specialBulk = (stats.hp + 75) * (stats.spd + 87);\n\n\t\tif (hasMove['willowisp'] || hasMove['acidarmor'] || hasMove['irondefense'] || hasMove['cottonguard']) {\n\t\t\tphysicalBulk *= 1.6;\n\t\t\tmoveCount['PhysicalStall']++;\n\t\t} else if (hasMove['scald'] || hasMove['bulkup'] || hasMove['coil'] || hasMove['cosmicpower']) {\n\t\t\tphysicalBulk *= 1.3;\n\t\t\tif (hasMove['scald']) { // partial stall goes in reverse\n\t\t\t\tmoveCount['SpecialStall']++;\n\t\t\t} else {\n\t\t\t\tmoveCount['PhysicalStall']++;\n\t\t\t}\n\t\t}\n\t\tif (abilityid === 'flamebody') physicalBulk *= 1.1;\n\n\t\tif (hasMove['calmmind'] || hasMove['quiverdance'] || hasMove['geomancy']) {\n\t\t\tspecialBulk *= 1.3;\n\t\t\tmoveCount['SpecialStall']++;\n\t\t}\n\t\tif (abilityid === 'sandstream' && species.types.includes('Rock')) {\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\n\t\tif (hasMove['bellydrum']) {\n\t\t\tphysicalBulk *= 0.6;\n\t\t\tspecialBulk *= 0.6;\n\t\t}\n\t\tif (moveCount['Restoration']) {\n\t\t\tphysicalBulk *= 1.5;\n\t\t\tspecialBulk *= 1.5;\n\t\t} else if (hasMove['painsplit'] && hasMove['substitute']) {\n\t\t\t// SubSplit isn't generally a stall set\n\t\t\tmoveCount['Stall']--;\n\t\t} else if (hasMove['painsplit'] || hasMove['rest']) {\n\t\t\tphysicalBulk *= 1.4;\n\t\t\tspecialBulk *= 1.4;\n\t\t}\n\t\tif ((hasMove['bodyslam'] || hasMove['thunder']) && abilityid === 'serenegrace' || hasMove['thunderwave']) {\n\t\t\tphysicalBulk *= 1.1;\n\t\t\tspecialBulk *= 1.1;\n\t\t}\n\t\tif ((hasMove['ironhead'] || hasMove['airslash']) && abilityid === 'serenegrace') {\n\t\t\tphysicalBulk *= 1.1;\n\t\t\tspecialBulk *= 1.1;\n\t\t}\n\t\tif (hasMove['gigadrain'] || hasMove['drainpunch'] || hasMove['hornleech']) {\n\t\t\tphysicalBulk *= 1.15;\n\t\t\tspecialBulk *= 1.15;\n\t\t}\n\t\tif (itemid === 'leftovers' || itemid === 'blacksludge') {\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t}\n\t\tif (hasMove['leechseed']) {\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t}\n\t\tif ((itemid === 'flameorb' || itemid === 'toxicorb') && abilityid !== 'magicguard') {\n\t\t\tif (itemid === 'toxicorb' && abilityid === 'poisonheal') {\n\t\t\t\tphysicalBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\n\t\t\t\tspecialBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\n\t\t\t} else {\n\t\t\t\tphysicalBulk *= 0.8;\n\t\t\t\tspecialBulk *= 0.8;\n\t\t\t}\n\t\t}\n\t\tif (itemid === 'lifeorb') {\n\t\t\tphysicalBulk *= 0.7;\n\t\t\tspecialBulk *= 0.7;\n\t\t}\n\t\tif (abilityid === 'multiscale' || abilityid === 'magicguard' || abilityid === 'regenerator') {\n\t\t\tphysicalBulk *= 1.4;\n\t\t\tspecialBulk *= 1.4;\n\t\t}\n\t\tif (itemid === 'eviolite') {\n\t\t\tphysicalBulk *= 1.5;\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\t\tif (itemid === 'assaultvest') {\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\n\t\tlet bulk = physicalBulk + specialBulk;\n\t\tif (bulk < 46000 && stats.spe >= 70) isFast = true;\n\t\tif (hasMove['trickroom']) isFast = false;\n\t\tmoveCount['bulk'] = bulk;\n\t\tmoveCount['physicalBulk'] = physicalBulk;\n\t\tmoveCount['specialBulk'] = specialBulk;\n\n\t\tif (\n\t\t\thasMove['agility'] || hasMove['dragondance'] || hasMove['quiverdance'] ||\n\t\t\thasMove['rockpolish'] || hasMove['shellsmash'] || hasMove['flamecharge']\n\t\t) {\n\t\t\tisFast = true;\n\t\t} else if (abilityid === 'unburden' || abilityid === 'speedboost' || abilityid === 'motordrive') {\n\t\t\tisFast = true;\n\t\t\tmoveCount['Ultrafast'] = 1;\n\t\t} else if (abilityid === 'chlorophyll' || abilityid === 'swiftswim' || abilityid === 'sandrush') {\n\t\t\tisFast = true;\n\t\t\tmoveCount['Ultrafast'] = 2;\n\t\t} else if (itemid === 'salacberry') {\n\t\t\tisFast = true;\n\t\t}\n\t\tconst ultrafast = hasMove['agility'] || hasMove['shellsmash'] ||\n\t\t\thasMove['autotomize'] || hasMove['shiftgear'] || hasMove['rockpolish'];\n\t\tif (ultrafast) {\n\t\t\tmoveCount['Ultrafast'] = 2;\n\t\t}\n\t\tmoveCount['Fast'] = isFast ? 1 : 0;\n\n\t\tthis.moveCount = moveCount;\n\t\tthis.hasMove = hasMove;\n\n\t\tif (species.id === 'ditto') return abilityid === 'imposter' ? 'Physically Defensive' : 'Fast Bulky Support';\n\t\tif (species.id === 'shedinja') return 'Fast Physical Sweeper';\n\n\t\tif (itemid === 'choiceband' && moveCount['PhysicalAttack'] >= 2) {\n\t\t\tif (!isFast) return 'Bulky Band';\n\t\t\treturn 'Fast Band';\n\t\t} else if (itemid === 'choicespecs' && moveCount['SpecialAttack'] >= 2) {\n\t\t\tif (!isFast) return 'Bulky Specs';\n\t\t\treturn 'Fast Specs';\n\t\t} else if (itemid === 'choicescarf') {\n\t\t\tif (moveCount['PhysicalAttack'] === 0) return 'Special Scarf';\n\t\t\tif (moveCount['SpecialAttack'] === 0) return 'Physical Scarf';\n\t\t\tif (moveCount['PhysicalAttack'] > moveCount['SpecialAttack']) return 'Physical Biased Mixed Scarf';\n\t\t\tif (moveCount['PhysicalAttack'] < moveCount['SpecialAttack']) return 'Special Biased Mixed Scarf';\n\t\t\tif (stats.atk < stats.spa) return 'Special Biased Mixed Scarf';\n\t\t\treturn 'Physical Biased Mixed Scarf';\n\t\t}\n\n\t\tif (species.id === 'unown') return 'Fast Special Sweeper';\n\n\t\tif (moveCount['PhysicalStall'] && moveCount['Restoration']) {\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\n\t\t\treturn 'Specially Defensive';\n\t\t}\n\t\tif (moveCount['SpecialStall'] && moveCount['Restoration'] && itemid !== 'lifeorb') {\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\n\t\t\treturn 'Physically Defensive';\n\t\t}\n\n\t\tlet offenseBias: 'Physical' | 'Special' = 'Physical';\n\t\tif (stats.spa > stats.atk && moveCount['Special'] > 1) offenseBias = 'Special';\n\t\telse if (stats.atk > stats.spa && moveCount['Physical'] > 1) offenseBias = 'Physical';\n\t\telse if (moveCount['Special'] > moveCount['Physical']) offenseBias = 'Special';\n\n\t\tif (moveCount['Stall'] + moveCount['Support'] / 2 <= 2 && bulk < 135000 && moveCount[offenseBias] >= 1.5) {\n\t\t\tif (isFast) {\n\t\t\t\tif (bulk > 80000 && !moveCount['Ultrafast']) return 'Bulky ' + offenseBias + ' Sweeper';\n\t\t\t\treturn 'Fast ' + offenseBias + ' Sweeper';\n\t\t\t} else {\n\t\t\t\tif (moveCount[offenseBias] >= 3 || moveCount['Stall'] <= 0) {\n\t\t\t\t\treturn 'Bulky ' + offenseBias + ' Sweeper';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isFast && abilityid !== 'prankster') {\n\t\t\tif (stats.spe > 100 || bulk < 55000 || moveCount['Ultrafast']) {\n\t\t\t\treturn 'Fast Bulky Support';\n\t\t\t}\n\t\t}\n\t\tif (moveCount['SpecialStall']) return 'Physically Defensive';\n\t\tif (moveCount['PhysicalStall']) return 'Specially Defensive';\n\t\tif (species.id === 'blissey' || species.id === 'chansey') return 'Physically Defensive';\n\t\tif (specialBulk >= physicalBulk) return 'Specially Defensive';\n\t\treturn 'Physically Defensive';\n\t}\n\tensureMinEVs(evs: StatsTable, stat: StatName, min: number, evTotal: number) {\n\t\tif (!evs[stat]) evs[stat] = 0;\n\t\tlet diff = min - evs[stat];\n\t\tif (diff <= 0) return evTotal;\n\t\tif (evTotal <= 504) {\n\t\t\tlet change = Math.min(508 - evTotal, diff);\n\t\t\tevTotal += change;\n\t\t\tevs[stat] += change;\n\t\t\tdiff -= change;\n\t\t}\n\t\tif (diff <= 0) return evTotal;\n\t\tlet evPriority = {def: 1, spd: 1, hp: 1, atk: 1, spa: 1, spe: 1};\n\t\tlet prioStat: StatName;\n\t\tfor (prioStat in evPriority) {\n\t\t\tif (prioStat === stat) continue;\n\t\t\tif (evs[prioStat] && evs[prioStat] > 128) {\n\t\t\t\tevs[prioStat] -= diff;\n\t\t\t\tevs[stat] += diff;\n\t\t\t\treturn evTotal;\n\t\t\t}\n\t\t}\n\t\treturn evTotal; // can't do it :(\n\t}\n\tensureMaxEVs(evs: StatsTable, stat: StatName, min: number, evTotal: number) {\n\t\tif (!evs[stat]) evs[stat] = 0;\n\t\tlet diff = evs[stat] - min;\n\t\tif (diff <= 0) return evTotal;\n\t\tevs[stat] -= diff;\n\t\tevTotal -= diff;\n\t\treturn evTotal; // can't do it :(\n\t}\n\tguessEVs(set: PokemonSet, role: string): Partial<StatsTable> & {plusStat?: StatName | '', minusStat?: StatName | ''} {\n\t\tif (!set) return {};\n\t\tif (role === '?') return {};\n\t\tlet species = this.dex.getSpecies(set.species || set.name!);\n\t\tlet stats = species.baseStats;\n\n\t\tlet hasMove = this.hasMove;\n\t\tlet moveCount = this.moveCount;\n\n\t\tlet evs: StatsTable & {plusStat?: StatName | '', minusStat?: StatName | ''} = {\n\t\t\thp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0,\n\t\t};\n\t\tlet plusStat: StatName | '' = '';\n\t\tlet minusStat: StatName | '' = '';\n\n\t\tlet statChart: {[role: string]: [StatName, StatName]} = {\n\t\t\t'Bulky Band': ['atk', 'hp'],\n\t\t\t'Fast Band': ['spe', 'atk'],\n\t\t\t'Bulky Specs': ['spa', 'hp'],\n\t\t\t'Fast Specs': ['spe', 'spa'],\n\t\t\t'Physical Scarf': ['spe', 'atk'],\n\t\t\t'Special Scarf': ['spe', 'spa'],\n\t\t\t'Physical Biased Mixed Scarf': ['spe', 'atk'],\n\t\t\t'Special Biased Mixed Scarf': ['spe', 'spa'],\n\t\t\t'Fast Physical Sweeper': ['spe', 'atk'],\n\t\t\t'Fast Special Sweeper': ['spe', 'spa'],\n\t\t\t'Bulky Physical Sweeper': ['atk', 'hp'],\n\t\t\t'Bulky Special Sweeper': ['spa', 'hp'],\n\t\t\t'Fast Bulky Support': ['spe', 'hp'],\n\t\t\t'Physically Defensive': ['def', 'hp'],\n\t\t\t'Specially Defensive': ['spd', 'hp'],\n\t\t};\n\n\t\tplusStat = statChart[role][0];\n\t\tif (role === 'Fast Bulky Support') moveCount['Ultrafast'] = 0;\n\t\tif (plusStat === 'spe' && moveCount['Ultrafast']) {\n\t\t\tif (statChart[role][1] === 'atk' || statChart[role][1] === 'spa') {\n\t\t\t\tplusStat = statChart[role][1];\n\t\t\t} else if (moveCount['Physical'] >= 3) {\n\t\t\t\tplusStat = 'atk';\n\t\t\t} else if (stats.spd > stats.def) {\n\t\t\t\tplusStat = 'spd';\n\t\t\t} else {\n\t\t\t\tplusStat = 'def';\n\t\t\t}\n\t\t}\n\n\t\tif (this.supportsAVs) {\n\t\t\t// Let's Go, AVs enabled\n\t\t\tevs = {hp: 200, atk: 200, def: 200, spa: 200, spd: 200, spe: 200};\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\n\t\t\tif (!moveCount['SpecialAttack']) evs.spa = 0;\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\n\t\t} else if (!this.supportsEVs) {\n\t\t\t// Let's Go, AVs disabled\n\t\t\t// no change\n\t\t} else if (this.ignoreEVLimits) {\n\t\t\t// Gen 1-2, hackable EVs (like Hackmons)\n\t\t\tevs = {hp: 252, atk: 252, def: 252, spa: 252, spd: 252, spe: 252};\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\n\t\t\tif (!moveCount['SpecialAttack'] && this.dex.gen > 1) evs.spa = 0;\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\n\t\t\tif (this.dex.gen === 1) evs.spd = 0;\n\t\t\tif (this.dex.gen < 3) return evs;\n\t\t} else {\n\t\t\t// Normal Gen 3-7\n\t\t\tif (!statChart[role]) return {};\n\n\t\t\tlet evTotal = 0;\n\n\t\t\tlet primaryStat = statChart[role][0];\n\t\t\tlet stat = this.getStat(primaryStat, set, 252, plusStat === primaryStat ? 1.1 : 1.0);\n\t\t\tlet ev = 252;\n\t\t\twhile (ev > 0 && stat <= this.getStat(primaryStat, set, ev - 4, plusStat === primaryStat ? 1.1 : 1.0)) ev -= 4;\n\t\t\tevs[primaryStat] = ev;\n\t\t\tevTotal += ev;\n\n\t\t\tlet secondaryStat: StatName | null = statChart[role][1];\n\t\t\tif (secondaryStat === 'hp' && set.level && set.level < 20) secondaryStat = 'spd';\n\t\t\tstat = this.getStat(secondaryStat, set, 252, plusStat === secondaryStat ? 1.1 : 1.0);\n\t\t\tev = 252;\n\t\t\twhile (ev > 0 && stat <= this.getStat(secondaryStat, set, ev - 4, plusStat === secondaryStat ? 1.1 : 1.0)) ev -= 4;\n\t\t\tevs[secondaryStat] = ev;\n\t\t\tevTotal += ev;\n\n\t\t\tlet SRweaknesses = ['Fire', 'Flying', 'Bug', 'Ice'];\n\t\t\tlet SRresistances = ['Ground', 'Steel', 'Fighting'];\n\t\t\tlet SRweak = 0;\n\t\t\tif (set.ability !== 'Magic Guard' && set.ability !== 'Mountaineer') {\n\t\t\t\tif (SRweaknesses.indexOf(species.types[0]) >= 0) {\n\t\t\t\t\tSRweak++;\n\t\t\t\t} else if (SRresistances.indexOf(species.types[0]) >= 0) {\n\t\t\t\t\tSRweak--;\n\t\t\t\t}\n\t\t\t\tif (SRweaknesses.indexOf(species.types[1]) >= 0) {\n\t\t\t\t\tSRweak++;\n\t\t\t\t} else if (SRresistances.indexOf(species.types[1]) >= 0) {\n\t\t\t\t\tSRweak--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet hpDivisibility = 0;\n\t\t\tlet hpShouldBeDivisible = false;\n\t\t\tlet hp = evs['hp'] || 0;\n\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\tif ((set.item === 'Leftovers' || set.item === 'Black Sludge') && hasMove['substitute'] && stat !== 404) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t} else if (set.item === 'Leftovers' || set.item === 'Black Sludge') {\n\t\t\t\thpDivisibility = 0;\n\t\t\t} else if (hasMove['bellydrum'] && (set.item || '').slice(-5) === 'Berry') {\n\t\t\t\thpDivisibility = 2;\n\t\t\t\thpShouldBeDivisible = true;\n\t\t\t} else if (hasMove['substitute'] && (set.item || '').slice(-5) === 'Berry') {\n\t\t\t\thpDivisibility = 4;\n\t\t\t\thpShouldBeDivisible = true;\n\t\t\t} else if (SRweak >= 2 || hasMove['bellydrum']) {\n\t\t\t\thpDivisibility = 2;\n\t\t\t} else if (SRweak >= 1 || hasMove['substitute'] || hasMove['transform']) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t} else if (set.ability !== 'Magic Guard') {\n\t\t\t\thpDivisibility = 8;\n\t\t\t}\n\n\t\t\tif (hpDivisibility) {\n\t\t\t\twhile (hp < 252 && evTotal < 508 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\n\t\t\t\t\thp += 4;\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\t\t\tevTotal += 4;\n\t\t\t\t}\n\t\t\t\twhile (hp > 0 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\n\t\t\t\t\thp -= 4;\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\t\t\tevTotal -= 4;\n\t\t\t\t}\n\t\t\t\twhile (hp > 0 && stat === this.getStat('hp', set, hp - 4, 1)) {\n\t\t\t\t\thp -= 4;\n\t\t\t\t\tevTotal -= 4;\n\t\t\t\t}\n\t\t\t\tif (hp || evs['hp']) evs['hp'] = hp;\n\t\t\t}\n\n\t\t\tif (species.id === 'tentacruel') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 16, evTotal);\n\t\t\t} else if (species.id === 'skarmory') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 24, evTotal);\n\t\t\t} else if (species.id === 'jirachi') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 32, evTotal);\n\t\t\t} else if (species.id === 'celebi') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 36, evTotal);\n\t\t\t} else if (species.id === 'volcarona') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 52, evTotal);\n\t\t\t} else if (species.id === 'gliscor') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 72, evTotal);\n\t\t\t} else if (species.id === 'dragonite' && evs['hp']) {\n\t\t\t\tevTotal = this.ensureMaxEVs(evs, 'spe', 220, evTotal);\n\t\t\t}\n\n\t\t\tif (evTotal < 508) {\n\t\t\t\tlet remaining = 508 - evTotal;\n\t\t\t\tif (remaining > 252) remaining = 252;\n\t\t\t\tsecondaryStat = null;\n\t\t\t\tif (!evs['atk'] && moveCount['PhysicalAttack'] >= 1) {\n\t\t\t\t\tsecondaryStat = 'atk';\n\t\t\t\t} else if (!evs['spa'] && moveCount['SpecialAttack'] >= 1) {\n\t\t\t\t\tsecondaryStat = 'spa';\n\t\t\t\t} else if (stats.hp === 1 && !evs['def']) {\n\t\t\t\t\tsecondaryStat = 'def';\n\t\t\t\t} else if (stats.def === stats.spd && !evs['spd']) {\n\t\t\t\t\tsecondaryStat = 'spd';\n\t\t\t\t} else if (!evs['spd']) {\n\t\t\t\t\tsecondaryStat = 'spd';\n\t\t\t\t} else if (!evs['def']) {\n\t\t\t\t\tsecondaryStat = 'def';\n\t\t\t\t}\n\t\t\t\tif (secondaryStat) {\n\t\t\t\t\tev = remaining;\n\t\t\t\t\tstat = this.getStat(secondaryStat, set, ev);\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat(secondaryStat, set, ev - 4)) ev -= 4;\n\t\t\t\t\tif (ev) evs[secondaryStat] = ev;\n\t\t\t\t\tremaining -= ev;\n\t\t\t\t}\n\t\t\t\tif (remaining && !evs['spe']) {\n\t\t\t\t\tev = remaining;\n\t\t\t\t\tstat = this.getStat('spe', set, ev);\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat('spe', set, ev - 4)) ev -= 4;\n\t\t\t\t\tif (ev) evs['spe'] = ev;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tif (hasMove['gyroball'] || hasMove['trickroom']) {\n\t\t\tminusStat = 'spe';\n\t\t} else if (!moveCount['PhysicalAttack']) {\n\t\t\tminusStat = 'atk';\n\t\t} else if (moveCount['SpecialAttack'] < 1 && !evs['spa']) {\n\t\t\tif (moveCount['SpecialAttack'] < moveCount['PhysicalAttack']) {\n\t\t\t\tminusStat = 'spa';\n\t\t\t} else if (!evs['atk']) {\n\t\t\t\tminusStat = 'atk';\n\t\t\t}\n\t\t} else if (moveCount['PhysicalAttack'] < 1 && !evs['atk']) {\n\t\t\tminusStat = 'atk';\n\t\t} else if (stats.def > stats.spe && stats.spd > stats.spe && !evs['spe']) {\n\t\t\tminusStat = 'spe';\n\t\t} else if (stats.def > stats.spd) {\n\t\t\tminusStat = 'spd';\n\t\t} else {\n\t\t\tminusStat = 'def';\n\t\t}\n\n\t\tif (plusStat === minusStat) {\n\t\t\tminusStat = (plusStat === 'spe' ? 'spd' : 'spe');\n\t\t}\n\n\t\tevs.plusStat = plusStat;\n\t\tevs.minusStat = minusStat;\n\n\t\treturn evs;\n\t}\n\n\tgetStat(stat: StatName, set: PokemonSet, evOverride?: number, natureOverride?: number) {\n\t\tlet species = this.dex.getSpecies(set.species);\n\t\tif (!species.exists) return 0;\n\n\t\tlet level = set.level || 100;\n\n\t\tlet baseStat = species.baseStats[stat];\n\n\t\tlet iv = (set.ivs && set.ivs[stat]);\n\t\tif (typeof iv !== 'number') iv = 31;\n\t\tif (this.dex.gen <= 2) iv &= 30;\n\n\t\tlet ev = (set.evs && set.evs[stat]);\n\t\tif (typeof ev !== 'number') ev = (this.dex.gen > 2 ? 0 : 252);\n\t\tif (evOverride !== undefined) ev = evOverride;\n\n\t\tif (stat === 'hp') {\n\t\t\tif (baseStat === 1) return 1;\n\t\t\tif (!this.supportsEVs) return ~~(~~(2 * baseStat + iv + 100) * level / 100 + 10) + (this.supportsAVs ? ev : 0);\n\t\t\treturn ~~(~~(2 * baseStat + iv + ~~(ev / 4) + 100) * level / 100 + 10);\n\t\t}\n\t\tlet val = ~~(~~(2 * baseStat + iv + ~~(ev / 4)) * level / 100 + 5);\n\t\tif (!this.supportsEVs) {\n\t\t\tval = ~~(~~(2 * baseStat + iv) * level / 100 + 5);\n\t\t}\n\t\tif (natureOverride) {\n\t\t\tval *= natureOverride;\n\t\t} else if (BattleNatures[set.nature!]?.plus === stat) {\n\t\t\tval *= 1.1;\n\t\t} else if (BattleNatures[set.nature!]?.minus === stat) {\n\t\t\tval *= 0.9;\n\t\t}\n\t\tif (!this.supportsEVs) {\n\t\t\tlet friendshipValue = ~~((70 / 255 / 10 + 1) * 100);\n\t\t\tval = ~~(val) * friendshipValue / 100 + (this.supportsAVs ? ev : 0);\n\t\t}\n\t\treturn ~~(val);\n\t}\n}\n\nif (typeof require === 'function') {\n\t// in Node\n\t(global as any).BattleStatGuesser = BattleStatGuesser;\n}\n"],"file":"battle-tooltips.js"}